{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/FAB/FABGroup.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport FAB from \"./FAB\";\nimport Text from \"../Typography/Text\";\nimport Card from \"../Card/Card\";\nimport { withTheme } from \"../../core/theming\";\n\nvar FABGroup = function (_React$Component) {\n  _inherits(FABGroup, _React$Component);\n\n  function FABGroup() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FABGroup);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FABGroup)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      backdrop: new Animated.Value(0),\n      animations: []\n    };\n\n    _this._close = function () {\n      return _this.props.onStateChange({\n        open: false\n      });\n    };\n\n    _this._toggle = function () {\n      return _this.props.onStateChange({\n        open: !_this.props.open\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FABGroup, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.open === prevProps.open) {\n        return;\n      }\n\n      if (this.props.open) {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250,\n          useNativeDriver: true\n        }), Animated.stagger(50, this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 1,\n            duration: 150,\n            useNativeDriver: true\n          });\n        }).reverse())]).start();\n      } else {\n        Animated.parallel([Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true\n        })].concat(_toConsumableArray(this.state.animations.map(function (animation) {\n          return Animated.timing(animation, {\n            toValue: 0,\n            duration: 150,\n            useNativeDriver: true\n          });\n        })))).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          actions = _this$props.actions,\n          icon = _this$props.icon,\n          open = _this$props.open,\n          _onPress = _this$props.onPress,\n          accessibilityLabel = _this$props.accessibilityLabel,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          fabStyle = _this$props.fabStyle,\n          visible = _this$props.visible;\n      var colors = theme.colors;\n      var labelColor = theme.dark ? colors.text : color(colors.text).fade(0.54).rgb().string();\n      var backdropOpacity = open ? this.state.backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1]\n      }) : this.state.backdrop;\n      var opacities = this.state.animations;\n      var scales = opacities.map(function (opacity) {\n        return open ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1]\n        }) : 1;\n      });\n      return React.createElement(View, {\n        pointerEvents: \"box-none\",\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: this._close,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        }\n      }, React.createElement(Animated.View, {\n        pointerEvents: open ? 'auto' : 'none',\n        style: [styles.backdrop, {\n          opacity: backdropOpacity,\n          backgroundColor: colors.backdrop\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        }\n      })), React.createElement(SafeAreaView, {\n        pointerEvents: \"box-none\",\n        style: styles.safeArea,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        }\n      }, React.createElement(View, {\n        pointerEvents: open ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        }\n      }, actions.map(function (it, i) {\n        return React.createElement(View, {\n          key: i,\n          style: styles.item,\n          pointerEvents: \"box-none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          }\n        }, it.label && React.createElement(Card, {\n          style: [styles.label, {\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i]\n          }],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2._close();\n          },\n          accessibilityLabel: it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: labelColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          }\n        }, it.label)), React.createElement(FAB, {\n          small: true,\n          icon: it.icon,\n          color: it.color,\n          style: [{\n            transform: [{\n              scale: scales[i]\n            }],\n            opacity: opacities[i],\n            backgroundColor: theme.colors.surface\n          }, it.style],\n          onPress: function onPress() {\n            it.onPress();\n\n            _this2._close();\n          },\n          accessibilityLabel: typeof it.accessibilityLabel !== 'undefined' ? it.accessibilityLabel : it.label,\n          accessibilityTraits: \"button\",\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          }\n        }));\n      })), React.createElement(FAB, {\n        onPress: function onPress() {\n          _onPress && _onPress();\n\n          _this2._toggle();\n        },\n        icon: icon,\n        color: this.props.color,\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        style: [styles.fab, fabStyle],\n        visible: visible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        animations: nextProps.actions.map(function (_, i) {\n          return prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0);\n        })\n      };\n    }\n  }]);\n\n  return FABGroup;\n}(React.Component);\n\nFABGroup.displayName = 'FAB.Group';\nexport default withTheme(FABGroup);\nexport { FABGroup };\nvar styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end'\n  },\n  container: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    justifyContent: 'flex-end'\n  }),\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0\n  },\n  backdrop: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["FABGroup","React","Component","displayName","nextProps","prevState","animations","Animated","state","backdrop","prevProps","toValue","duration","useNativeDriver","_close","open","_toggle","actions","icon","onPress","accessibilityLabel","theme","style","fabStyle","visible","colors","labelColor","color","backdropOpacity","inputRange","outputRange","opacities","scales","opacity","styles","backgroundColor","it","transform","scale","withTheme","StyleSheet","safeArea","alignItems","container","justifyContent","fab","marginHorizontal","marginBottom","marginTop","label","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","item","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    onPress: () => void;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  backdrop: Animated.Value;\n  animations: Animated.Value[];\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     open: false,\n *   };\n *\n *   render() {\n *     return (\n *       <Provider>\n *          <Portal>\n *            <FAB.Group\n *              open={this.state.open}\n *              icon={this.state.open ? 'today' : 'add'}\n *              actions={[\n *                { icon: 'add', onPress: () => console.log('Pressed add') },\n *                { icon: 'star', label: 'Star', onPress: () => console.log('Pressed star')},\n *                { icon: 'email', label: 'Email', onPress: () => console.log('Pressed email') },\n *                { icon: 'bell', label: 'Remind', onPress: () => console.log('Pressed notifications') },\n *              ]}\n *              onStateChange={({ open }) => this.setState({ open })}\n *              onPress={() => {\n *                if (this.state.open) {\n *                  // do something if the speed dial is open\n *                }\n *              }}\n *            />\n *          </Portal>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass FABGroup extends React.Component<Props, State> {\n  static displayName = 'FAB.Group';\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    return {\n      animations: nextProps.actions.map(\n        (_, i) =>\n          prevState.animations[i] || new Animated.Value(nextProps.open ? 1 : 0)\n      ),\n    };\n  }\n\n  state: State = {\n    backdrop: new Animated.Value(0),\n    animations: [],\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.open === prevProps.open) {\n      return;\n    }\n\n    if (this.props.open) {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 1,\n          duration: 250,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50,\n          this.state.animations\n            .map(animation =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(this.state.backdrop, {\n          toValue: 0,\n          duration: 200,\n          useNativeDriver: true,\n        }),\n        ...this.state.animations.map(animation =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }\n\n  _close = () => this.props.onStateChange({ open: false });\n\n  _toggle = () => this.props.onStateChange({ open: !this.props.open });\n\n  render() {\n    const {\n      actions,\n      icon,\n      open,\n      onPress,\n      accessibilityLabel,\n      theme,\n      style,\n      fabStyle,\n      visible,\n    } = this.props;\n    const { colors } = theme;\n\n    const labelColor = theme.dark\n      ? colors.text\n      : color(colors.text)\n          .fade(0.54)\n          .rgb()\n          .string();\n    const backdropOpacity = open\n      ? this.state.backdrop.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [0, 1, 1],\n        })\n      : this.state.backdrop;\n\n    const opacities = this.state.animations;\n    const scales = opacities.map(opacity =>\n      open\n        ? opacity.interpolate({\n            inputRange: [0, 1],\n            outputRange: [0.8, 1],\n          })\n        : 1\n    );\n\n    return (\n      <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n        <TouchableWithoutFeedback onPress={this._close}>\n          <Animated.View\n            pointerEvents={open ? 'auto' : 'none'}\n            style={[\n              styles.backdrop,\n              {\n                opacity: backdropOpacity,\n                backgroundColor: colors.backdrop,\n              },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n          <View pointerEvents={open ? 'box-none' : 'none'}>\n            {actions.map((it, i) => (\n              <View\n                key={i} // eslint-disable-line react/no-array-index-key\n                style={styles.item}\n                pointerEvents=\"box-none\"\n              >\n                {it.label && (\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      this._close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                )}\n                <FAB\n                  small\n                  icon={it.icon}\n                  color={it.color}\n                  style={\n                    [\n                      {\n                        transform: [{ scale: scales[i] }],\n                        opacity: opacities[i],\n                        backgroundColor: theme.colors.surface,\n                      },\n                      it.style,\n                    ] as StyleProp<ViewStyle>\n                  }\n                  onPress={() => {\n                    it.onPress();\n                    this._close();\n                  }}\n                  accessibilityLabel={\n                    typeof it.accessibilityLabel !== 'undefined'\n                      ? it.accessibilityLabel\n                      : it.label\n                  }\n                  accessibilityTraits=\"button\"\n                  accessibilityComponentType=\"button\"\n                  accessibilityRole=\"button\"\n                />\n              </View>\n            ))}\n          </View>\n          <FAB\n            onPress={() => {\n              onPress && onPress();\n              this._toggle();\n            }}\n            icon={icon}\n            color={this.props.color}\n            accessibilityLabel={accessibilityLabel}\n            accessibilityTraits=\"button\"\n            accessibilityComponentType=\"button\"\n            accessibilityRole=\"button\"\n            style={[styles.fab, fabStyle]}\n            visible={visible}\n          />\n        </SafeAreaView>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nexport { FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginHorizontal: 24,\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}