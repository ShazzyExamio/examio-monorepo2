{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/core/Provider.tsx\";\nimport * as React from 'react';\nimport { ThemeProvider } from \"./theming\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\n\nvar Provider = function (_React$Component) {\n  _inherits(Provider, _React$Component);\n\n  function Provider() {\n    _classCallCheck(this, Provider);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Provider).apply(this, arguments));\n  }\n\n  _createClass(Provider, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PortalHost, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        }\n      }, React.createElement(SettingsProvider, {\n        value: this.props.settings || {\n          icon: MaterialCommunityIcon\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        }\n      }, React.createElement(ThemeProvider, {\n        theme: this.props.theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        }\n      }, this.props.children)));\n    }\n  }]);\n\n  return Provider;\n}(React.Component);\n\nexport { Provider as default };","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","React","Component","icon"],"mappings":";;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,aAAA;AACA,SAASA,QAAQ,IAAjB,gBAAA;AACA,OAAA,qBAAA;AACA,OAAA,UAAA;;AASqBA,IAAAA,Q;;;;;;;;;;;6BACV;MACP,OACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,EACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;QACE,KAAK,EAAE,KAAA,KAAA,CAAA,QAAA,IAAuB;UAAEG,IAAI,EADtC;QACgC,CADhC;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,EAGE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;QAAe,KAAK,EAAE,KAAA,KAAA,CAAtB,KAAA;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,EACG,KAAA,KAAA,CANT,QAKM,CAHF,CADF,CADF;;;;;EAFkCF,KAAK,CAACC,S,CAAvBF;;SAAAA,Q","sourcesContent":["import * as React from 'react';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport { Theme } from '../types';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: Theme;\n  settings?: Settings;\n};\n\nexport default class Provider extends React.Component<Props> {\n  render() {\n    return (\n      <PortalHost>\n        <SettingsProvider\n          value={this.props.settings || { icon: MaterialCommunityIcon }}\n        >\n          <ThemeProvider theme={this.props.theme}>\n            {this.props.children}\n          </ThemeProvider>\n        </SettingsProvider>\n      </PortalHost>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}