{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Card/Card.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CardContent from \"./CardContent\";\nimport CardActions from \"./CardActions\";\nimport CardCover from \"./CardCover\";\nimport CardTitle from \"./CardTitle\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\n\nvar Card = function (_React$Component) {\n  _inherits(Card, _React$Component);\n\n  function Card() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Card);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Card)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      elevation: new Animated.Value(_this.props.elevation)\n    };\n\n    _this._handlePressIn = function () {\n      Animated.timing(_this.state.elevation, {\n        toValue: 8,\n        duration: 150\n      }).start();\n    };\n\n    _this._handlePressOut = function () {\n      Animated.timing(_this.state.elevation, {\n        toValue: _this.props.elevation,\n        duration: 150\n      }).start();\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          cardElevation = _this$props.elevation,\n          onLongPress = _this$props.onLongPress,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          testID = _this$props.testID,\n          accessible = _this$props.accessible,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"elevation\", \"onLongPress\", \"onPress\", \"style\", \"theme\", \"testID\", \"accessible\"]);\n\n      var elevation = this.state.elevation;\n      var roundness = theme.roundness;\n      var total = React.Children.count(children);\n      var siblings = React.Children.map(children, function (child) {\n        return React.isValidElement(child) && child.type ? child.type.displayName : null;\n      });\n      return React.createElement(Surface, _extends({\n        style: [{\n          borderRadius: roundness,\n          elevation: elevation\n        }, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        }\n      }), React.createElement(TouchableWithoutFeedback, {\n        delayPressIn: 0,\n        disabled: !(onPress || onLongPress),\n        onLongPress: onLongPress,\n        onPress: onPress,\n        onPressIn: onPress ? this._handlePressIn : undefined,\n        onPressOut: onPress ? this._handlePressOut : undefined,\n        testID: testID,\n        accessible: accessible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }, React.createElement(View, {\n        style: styles.innerContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        }\n      }, React.Children.map(children, function (child, index) {\n        return React.isValidElement(child) ? React.cloneElement(child, {\n          index: index,\n          total: total,\n          siblings: siblings\n        }) : child;\n      }))));\n    }\n  }]);\n\n  return Card;\n}(React.Component);\n\nCard.Content = CardContent;\nCard.Actions = CardActions;\nCard.Cover = CardCover;\nCard.Title = CardTitle;\nCard.defaultProps = {\n  elevation: 1\n};\nvar styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1\n  }\n});\nexport default withTheme(Card);","map":{"version":3,"sources":["Card.tsx"],"names":["Card","React","Component","Content","CardContent","Actions","CardActions","Cover","CardCover","Title","CardTitle","defaultProps","elevation","state","Animated","_handlePressIn","toValue","duration","_handlePressOut","children","cardElevation","onLongPress","onPress","style","theme","testID","accessible","rest","roundness","total","siblings","child","borderRadius","styles","index","StyleSheet","innerContainer","flexGrow","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport CardContent from './CardContent';\nimport CardActions from './CardActions';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardCover, { CardCover as _CardCover } from './CardCover';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CardTitle, { CardTitle as _CardTitle } from './CardTitle';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Resting elevation of the card which controls the drop shadow.\n   */\n  elevation?: number;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Content of the `Card`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Pass down testID from card props to touchable\n   */\n  testID?: string;\n  /**\n   * Pass down accessible from card props to touchable\n   */\n  accessible?: boolean;\n};\n\ntype State = {\n  elevation: Animated.Value;\n};\n\n/**\n * A card is a sheet of material that serves as an entry point to more detailed information.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/card-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/card-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Title title=\"Card Title\" subtitle=\"Card Subtitle\" left={(props) => <Avatar.Icon {...props} icon=\"folder\" />} />\n *     <Card.Content>\n *       <Title>Card title</Title>\n *       <Paragraph>Card content</Paragraph>\n *     </Card.Content>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *     <Card.Actions>\n *       <Button>Cancel</Button>\n *       <Button>Ok</Button>\n *     </Card.Actions>\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Card extends React.Component<Props, State> {\n  // @component ./CardContent.tsx\n  static Content = CardContent;\n  // @component ./CardActions.tsx\n  static Actions = CardActions;\n  // @component ./CardCover.tsx\n  static Cover = CardCover;\n  // @component ./CardTitle.tsx\n  static Title = CardTitle;\n\n  static defaultProps = {\n    elevation: 1,\n  };\n\n  state = {\n    // @ts-ignore\n    elevation: new Animated.Value(this.props.elevation),\n  };\n\n  _handlePressIn = () => {\n    Animated.timing(this.state.elevation, {\n      toValue: 8,\n      duration: 150,\n    }).start();\n  };\n\n  _handlePressOut = () => {\n    Animated.timing(this.state.elevation, {\n      // @ts-ignore\n      toValue: this.props.elevation,\n      duration: 150,\n    }).start();\n  };\n\n  render() {\n    const {\n      children,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      elevation: cardElevation,\n      onLongPress,\n      onPress,\n      style,\n      theme,\n      testID,\n      accessible,\n      ...rest\n    } = this.props;\n    const { elevation } = this.state;\n    const { roundness } = theme;\n    const total = React.Children.count(children);\n    const siblings = React.Children.map(children, child =>\n      React.isValidElement(child) && child.type\n        ? (child.type as any).displayName\n        : null\n    );\n    return (\n      <Surface\n        style={[{ borderRadius: roundness, elevation }, style]}\n        {...rest}\n      >\n        <TouchableWithoutFeedback\n          delayPressIn={0}\n          disabled={!(onPress || onLongPress)}\n          onLongPress={onLongPress}\n          onPress={onPress}\n          onPressIn={onPress ? this._handlePressIn : undefined}\n          onPressOut={onPress ? this._handlePressOut : undefined}\n          testID={testID}\n          accessible={accessible}\n        >\n          <View style={styles.innerContainer}>\n            {React.Children.map(children, (child, index) =>\n              React.isValidElement(child)\n                ? React.cloneElement(child, {\n                    index,\n                    total,\n                    siblings,\n                  })\n                : child\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  innerContainer: {\n    flexGrow: 1,\n  },\n});\n\nexport default withTheme(Card);\n"]},"metadata":{},"sourceType":"module"}