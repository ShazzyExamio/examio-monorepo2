{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { memo, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { emailValidator } from \"../core/utils\";\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport Button from \"../components/Button\";\nimport Paragraph from \"../components/Paragraph\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _onSendPressed = function _onSendPressed() {\n    var emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.navigate('LoginScreen');\n      }\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \"Passwort vergessen?\"\n    }), _jsx(Paragraph, {\n      children: \"Auf Anforderung erzeugen wir einen Link, der die Vergabe eines neuen Passworts erm\\xF6glicht. Wir senden den Link an die bei der Registrierung angegebene eMail-Adresse.\"\n    }), _jsx(TextInput, {\n      label: \"Email-Adresse\",\n      returnKeyType: \"done\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: ''\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\",\n      accessibilityStates: true,\n      accessibilityComponentType: true,\n      accessibilityTraits: true\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: _onSendPressed,\n      style: styles.button,\n      accessibilityStates: true,\n      accessibilityComponentType: true,\n      accessibilityTraits: true,\n      children: \"Senden\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.back,\n      onPress: function onPress() {\n        return navigation.navigate('LoginScreen');\n      },\n      children: _jsx(Text, {\n        style: styles.label,\n        children: \"\\u2190 Zur\\xFCck zur Anmelden\"\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  back: {\n    width: '100%',\n    marginTop: 12\n  },\n  button: {\n    marginTop: 12\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: '100%'\n  }\n});\nexport default memo(ForgotPasswordScreen);","map":{"version":3,"names":["React","memo","useState","emailValidator","Background","BackButton","Logo","Header","TextInput","theme","Button","Paragraph","ForgotPasswordScreen","navigation","value","error","email","setEmail","_onSendPressed","emailError","navigate","text","styles","button","back","label","StyleSheet","create","width","marginTop","color","colors","secondary"],"sources":["/Users/shahzarkhalid/Desktop/Examio Mono Repo2/packages/examio-native-app/src/screens/ForgotPasswordScreen.tsx"],"sourcesContent":["import React, { memo, useState } from 'react';\nimport { Text, StyleSheet, TouchableOpacity } from 'react-native';\nimport { emailValidator } from '../core/utils';\nimport Background from '../components/Background';\nimport BackButton from '../components/BackButton';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport TextInput from '../components/TextInput';\nimport { theme } from '../core/theme';\nimport Button from '../components/Button';\nimport { Navigation } from '../types';\nimport Paragraph from '../components/Paragraph';\n\ntype Props = {\n  navigation: Navigation;\n};\n\nconst ForgotPasswordScreen = ({ navigation }: Props) => {\n  const [email, setEmail] = useState({ value: '', error: '' });\n\n  const _onSendPressed = () => {\n    const emailError = emailValidator(email.value);\n\n    if (emailError) {\n      setEmail({ ...email, error: emailError });\n      return;\n    }\n\n    navigation.navigate('LoginScreen');\n  };\n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate('LoginScreen')} />\n\n      <Logo />\n\n      <Header>Passwort vergessen?</Header>\n      <Paragraph>Auf Anforderung erzeugen wir einen Link, der die Vergabe eines neuen Passworts ermöglicht.\n      Wir senden den Link an die bei der Registrierung angegebene eMail-Adresse.</Paragraph>\n\n      <TextInput\n        label=\"Email-Adresse\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        accessibilityStates\n        accessibilityComponentType\n        accessibilityTraits\n      />\n\n      <Button mode=\"contained\" onPress={_onSendPressed} style={styles.button} accessibilityStates  accessibilityComponentType  accessibilityTraits>\n        Senden\n      </Button>\n\n      <TouchableOpacity\n        style={styles.back}\n        onPress={() => navigation.navigate('LoginScreen')}\n      >\n        <Text style={styles.label}>← Zurück zur Anmelden</Text>\n      </TouchableOpacity>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  back: {\n    width: '100%',\n    marginTop: 12,\n  },\n  button: {\n    marginTop: 12,\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: '100%',\n  },\n});\n\nexport default memo(ForgotPasswordScreen);\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,QAAsC,OAAtC;;;;AAEA,SAASC,cAAT;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,SAASC,KAAT;AACA,OAAOC,MAAP;AAEA,OAAOC,SAAP;;;;AAMA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAA2B;EAAA,IAAxBC,UAAwB,QAAxBA,UAAwB;;EACtD,gBAA0BX,QAAQ,CAAC;IAAEY,KAAK,EAAE,EAAT;IAAaC,KAAK,EAAE;EAApB,CAAD,CAAlC;EAAA;EAAA,IAAOC,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;IAC3B,IAAMC,UAAU,GAAGhB,cAAc,CAACa,KAAK,CAACF,KAAP,CAAjC;;IAEA,IAAIK,UAAJ,EAAgB;MACdF,QAAQ,iCAAMD,KAAN;QAAaD,KAAK,EAAEI;MAApB,GAAR;MACA;IACD;;IAEDN,UAAU,CAACO,QAAX,CAAoB,aAApB;EACD,CATD;;EAWA,OACE,MAAC,UAAD;IAAA,WACE,KAAC,UAAD;MAAY,MAAM,EAAE;QAAA,OAAMP,UAAU,CAACO,QAAX,CAAoB,aAApB,CAAN;MAAA;IAApB,EADF,EAGE,KAAC,IAAD,KAHF,EAKE,KAAC,MAAD;MAAA;IAAA,EALF,EAME,KAAC,SAAD;MAAA;IAAA,EANF,EASE,KAAC,SAAD;MACE,KAAK,EAAC,eADR;MAEE,aAAa,EAAC,MAFhB;MAGE,KAAK,EAAEJ,KAAK,CAACF,KAHf;MAIE,YAAY,EAAE,sBAAAO,IAAI;QAAA,OAAIJ,QAAQ,CAAC;UAAEH,KAAK,EAAEO,IAAT;UAAeN,KAAK,EAAE;QAAtB,CAAD,CAAZ;MAAA,CAJpB;MAKE,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;MAME,SAAS,EAAEC,KAAK,CAACD,KANnB;MAOE,cAAc,EAAC,MAPjB;MAQE,gBAAgB,EAAC,OARnB;MASE,eAAe,EAAC,cATlB;MAUE,YAAY,EAAC,eAVf;MAWE,mBAAmB,MAXrB;MAYE,0BAA0B,MAZ5B;MAaE,mBAAmB;IAbrB,EATF,EAyBE,KAAC,MAAD;MAAQ,IAAI,EAAC,WAAb;MAAyB,OAAO,EAAEG,cAAlC;MAAkD,KAAK,EAAEI,MAAM,CAACC,MAAhE;MAAwE,mBAAmB,MAA3F;MAA6F,0BAA0B,MAAvH;MAAyH,mBAAmB,MAA5I;MAAA;IAAA,EAzBF,EA6BE,KAAC,gBAAD;MACE,KAAK,EAAED,MAAM,CAACE,IADhB;MAEE,OAAO,EAAE;QAAA,OAAMX,UAAU,CAACO,QAAX,CAAoB,aAApB,CAAN;MAAA,CAFX;MAAA,UAIE,KAAC,IAAD;QAAM,KAAK,EAAEE,MAAM,CAACG,KAApB;QAAA;MAAA;IAJF,EA7BF;EAAA,EADF;AAsCD,CApDD;;AAsDA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BH,IAAI,EAAE;IACJI,KAAK,EAAE,MADH;IAEJC,SAAS,EAAE;EAFP,CADyB;EAK/BN,MAAM,EAAE;IACNM,SAAS,EAAE;EADL,CALuB;EAQ/BJ,KAAK,EAAE;IACLK,KAAK,EAAErB,KAAK,CAACsB,MAAN,CAAaC,SADf;IAELJ,KAAK,EAAE;EAFF;AARwB,CAAlB,CAAf;AAcA,eAAe3B,IAAI,CAACW,oBAAD,CAAnB"},"metadata":{},"sourceType":"module"}