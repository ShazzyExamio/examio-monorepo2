{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/TextInput/Label/LabelBackground.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AnimatedText from \"../../Typography/AnimatedText\";\n\nvar LabelBackground = function LabelBackground(_ref) {\n  var parentState = _ref.parentState,\n      _ref$labelProps = _ref.labelProps,\n      placeholderStyle = _ref$labelProps.placeholderStyle,\n      baseLabelTranslateX = _ref$labelProps.baseLabelTranslateX,\n      topPosition = _ref$labelProps.topPosition,\n      hasActiveOutline = _ref$labelProps.hasActiveOutline,\n      label = _ref$labelProps.label,\n      backgroundColor = _ref$labelProps.backgroundColor,\n      labelStyle = _ref.labelStyle;\n  var hasFocus = hasActiveOutline || parentState.value;\n  var opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0]\n  });\n  var labelTranslationX = {\n    transform: [{\n      translateX: parentState.labeled.interpolate({\n        inputRange: [0, 1],\n        outputRange: [-baseLabelTranslateX, 0]\n      })\n    }]\n  };\n  return label ? [React.createElement(Animated.View, {\n    key: \"labelBackground-view\",\n    pointerEvents: \"none\",\n    style: [StyleSheet.absoluteFill, styles.view, {\n      backgroundColor: backgroundColor,\n      opacity: opacity\n    }, labelTranslationX],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    }\n  }), React.createElement(AnimatedText, {\n    key: \"labelBackground-text\",\n    style: [placeholderStyle, labelStyle, styles.outlinedLabel, {\n      top: topPosition + 1,\n      backgroundColor: backgroundColor,\n      opacity: opacity,\n      transform: [].concat(_toConsumableArray(labelStyle.transform), [{\n        scaleY: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.2, 1]\n        })\n      }])\n    }],\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    }\n  }, label)] : null;\n};\n\nexport default LabelBackground;\nvar styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 8,\n    height: 2\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent'\n  }\n});","map":{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","labelStyle","hasFocus","opacity","inputRange","outputRange","labelTranslationX","transform","translateX","StyleSheet","styles","top","scaleY","view","position","left","width","height","outlinedLabel","paddingHorizontal","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet } from 'react-native';\n\nimport AnimatedText from '../../Typography/AnimatedText';\n\nimport { LabelBackgroundProps } from '../types';\n\nconst LabelBackground = ({\n  parentState,\n  labelProps: {\n    placeholderStyle,\n    baseLabelTranslateX,\n    topPosition,\n    hasActiveOutline,\n    label,\n    backgroundColor,\n  },\n  labelStyle,\n}: LabelBackgroundProps) => {\n  const hasFocus = hasActiveOutline || parentState.value;\n  const opacity = parentState.labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasFocus ? 1 : 0, 0],\n  });\n\n  const labelTranslationX = {\n    transform: [\n      {\n        translateX: parentState.labeled.interpolate({\n          inputRange: [0, 1],\n          outputRange: [-baseLabelTranslateX, 0],\n        }),\n      },\n    ],\n  };\n\n  return label\n    ? [\n        <Animated.View\n          key=\"labelBackground-view\"\n          pointerEvents=\"none\"\n          style={[\n            StyleSheet.absoluteFill,\n            styles.view,\n            {\n              backgroundColor,\n              opacity,\n            },\n            labelTranslationX,\n          ]}\n        />,\n        <AnimatedText\n          key=\"labelBackground-text\"\n          style={[\n            placeholderStyle,\n            labelStyle,\n            styles.outlinedLabel,\n            {\n              top: topPosition + 1,\n              backgroundColor,\n              opacity,\n              transform: [\n                ...labelStyle.transform,\n                {\n                  scaleY: parentState.labeled.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [0.2, 1],\n                  }),\n                },\n              ],\n            },\n          ]}\n          numberOfLines={1}\n        >\n          {label}\n        </AnimatedText>,\n      ]\n    : null;\n};\n\nexport default LabelBackground;\n\nconst styles = StyleSheet.create({\n  view: {\n    position: 'absolute',\n    top: 6,\n    left: 10,\n    width: 8,\n    height: 2,\n  },\n  outlinedLabel: {\n    position: 'absolute',\n    left: 18,\n    paddingHorizontal: 0,\n    color: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}