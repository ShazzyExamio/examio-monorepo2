{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Portal/PortalManager.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar PortalManager = function (_React$PureComponent) {\n  _inherits(PortalManager, _React$PureComponent);\n\n  function PortalManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PortalManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PortalManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      portals: []\n    };\n\n    _this.mount = function (key, children) {\n      _this.setState(function (state) {\n        return {\n          portals: [].concat(_toConsumableArray(state.portals), [{\n            key: key,\n            children: children\n          }])\n        };\n      });\n    };\n\n    _this.update = function (key, children) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.map(function (item) {\n            if (item.key === key) {\n              return _objectSpread({}, item, {\n                children: children\n              });\n            }\n\n            return item;\n          })\n        };\n      });\n    };\n\n    _this.unmount = function (key) {\n      return _this.setState(function (state) {\n        return {\n          portals: state.portals.filter(function (item) {\n            return item.key !== key;\n          })\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PortalManager, [{\n    key: \"render\",\n    value: function render() {\n      return this.state.portals.map(function (_ref) {\n        var key = _ref.key,\n            children = _ref.children;\n        return React.createElement(View, {\n          key: key,\n          collapsable: false,\n          pointerEvents: \"box-none\",\n          style: StyleSheet.absoluteFill,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          }\n        }, children);\n      });\n    }\n  }]);\n\n  return PortalManager;\n}(React.PureComponent);\n\nexport { PortalManager as default };","map":{"version":3,"sources":["PortalManager.tsx"],"names":["PortalManager","React","PureComponent","state","portals","mount","key","children","update","item","unmount","StyleSheet"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAaqBA,IAAAA,a;;;;;;;;;;;;;;;UACnBG,K,GAAe;MACbC,OAAO,EADM;IAAA,C;;UAIfC,K,GAAQ,UAAA,GAAA,EAAA,QAAA,EAA4C;MAClD,KAAA,CAAA,QAAA,CAAc,UAAA,KAAA,EAAK;QAAA,OAAK;UACtBD,OAAO,EAAA,GAAA,MAAA,CAAA,kBAAA,CAAMD,KAAK,CAAX,OAAA,CAAA,EAAA,CAAqB;YAAEG,GAAG,EAAL,GAAA;YAAOC,QAAQ,EAD1B;UACW,CAArB,CAAA;QADe,CAAL;MAAnB,CAAA;;;UAKFC,M,GAAS,UAAA,GAAA,EAAA,QAAA,EAAA;MAAA,OACP,KAAA,CAAA,QAAA,CAAc,UAAA,KAAA,EAAK;QAAA,OAAK;UACtBJ,OAAO,EAAED,KAAK,CAALA,OAAAA,CAAAA,GAAAA,CAAkB,UAAA,IAAA,EAAQ;YACjC,IAAIM,IAAI,CAAJA,GAAAA,KAAJ,GAAA,EAAsB;cACpB,OAAA,aAAA,CAAA,EAAA,EAAA,IAAA,EAAA;gBAAkBF,QAAQ,EAA1B;cAAA,CAAA,CAAA;YAEF;;YAAA,OAAA,IAAA;UALe,CACRJ;QADa,CAAL;MADZ,CACP,CADO;;;UAUTO,O,GAAU,UAAA,GAAA,EAAA;MAAA,OACR,KAAA,CAAA,QAAA,CAAc,UAAA,KAAA,EAAK;QAAA,OAAK;UACtBN,OAAO,EAAED,KAAK,CAALA,OAAAA,CAAAA,MAAAA,CAAqB,UAAA,IAAA,EAAI;YAAA,OAAIM,IAAI,CAAJA,GAAAA,KAAJ,GAAA;UADjB,CACRN;QADa,CAAL;MADX,CACR,CADQ;;;;;;;;6BAKD;MACP,OAAO,KAAA,KAAA,CAAA,OAAA,CAAA,GAAA,CAAuB,UAAA,IAAA,EAAA;QAAA,IAAGG,GAAH,GAAA,IAAA,CAAA,GAAA;QAAA,IAAQC,QAAR,GAAA,IAAA,CAAA,QAAA;QAAA,OAC5B,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;UACE,GAAG,EADL,GAAA;UAEE,WAAW,EAFb,KAAA;UAKE,aAAa,EALf,UAAA;UAME,KAAK,EAAEI,UAAU,CANnB,YAAA;UAAA,QAAA,EAAA;YAAA,QAAA,EAAA,YAAA;YAAA,UAAA,EAAA;UAAA;QAAA,CAAA,EAD4B,QAC5B,CAD4B;MAA9B,CAAO,CAAP;;;;;EA3BuCV,KAAK,CAACC,a,CAA5BF;;SAAAA,a","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\ntype State = {\n  portals: Array<{\n    key: number;\n    children: React.ReactNode;\n  }>;\n};\n\n/**\n * Portal host is the component which actually renders all Portals.\n */\nexport default class PortalManager extends React.PureComponent<{}, State> {\n  state: State = {\n    portals: [],\n  };\n\n  mount = (key: number, children: React.ReactNode) => {\n    this.setState(state => ({\n      portals: [...state.portals, { key, children }],\n    }));\n  };\n\n  update = (key: number, children: React.ReactNode) =>\n    this.setState(state => ({\n      portals: state.portals.map(item => {\n        if (item.key === key) {\n          return { ...item, children };\n        }\n        return item;\n      }),\n    }));\n\n  unmount = (key: number) =>\n    this.setState(state => ({\n      portals: state.portals.filter(item => item.key !== key),\n    }));\n\n  render() {\n    return this.state.portals.map(({ key, children }) => (\n      <View\n        key={key}\n        collapsable={\n          false /* Need collapsable=false here to clip the elevations, otherwise they appear above sibling components */\n        }\n        pointerEvents=\"box-none\"\n        style={StyleSheet.absoluteFill}\n      >\n        {children}\n      </View>\n    ));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}