{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/Menu.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { withTheme } from \"../../core/theming\";\nimport Portal from \"../Portal/Portal\";\nimport Surface from \"../Surface\";\nimport MenuItem from \"./MenuItem\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../../constants\";\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\nvar EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  function Menu() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Menu)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rendered: _this.props.visible,\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new Animated.Value(0),\n      scaleAnimation: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    };\n    _this._anchor = null;\n    _this._menu = null;\n\n    _this._isAnchorCoord = function () {\n      return !React.isValidElement(_this.props.anchor);\n    };\n\n    _this._measureMenuLayout = function () {\n      return new Promise(function (resolve) {\n        if (_this._menu) {\n          _this._menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this._measureAnchorLayout = function () {\n      return new Promise(function (resolve) {\n        var anchor = _this.props.anchor;\n\n        if (_this._isAnchorCoord()) {\n          resolve({\n            x: anchor.x,\n            y: anchor.y,\n            width: 0,\n            height: 0\n          });\n          return;\n        }\n\n        if (_this._anchor) {\n          _this._anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this._updateVisibility = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Promise.resolve());\n\n            case 2:\n              if (_this.props.visible) {\n                _this._show();\n              } else {\n                _this._hide();\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this._isBrowser = function () {\n      return 'document' in global;\n    };\n\n    _this._focusFirstDOMNode = function (el) {\n      if (el && _this._isBrowser()) {\n        var node = findNodeHandle(el);\n        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])');\n        focusableNode && focusableNode.focus();\n      }\n    };\n\n    _this._handleDismiss = function () {\n      if (_this.props.visible) {\n        _this.props.onDismiss();\n      }\n\n      return true;\n    };\n\n    _this._handleKeypress = function (e) {\n      if (e.key === 'Escape') {\n        _this.props.onDismiss();\n      }\n    };\n\n    _this._attachListeners = function () {\n      BackHandler.addEventListener('hardwareBackPress', _this._handleDismiss);\n      Dimensions.addEventListener('change', _this._handleDismiss);\n      _this._isBrowser() && document.addEventListener('keyup', _this._handleKeypress);\n    };\n\n    _this._removeListeners = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this._handleDismiss);\n      Dimensions.removeEventListener('change', _this._handleDismiss);\n      _this._isBrowser() && document.removeEventListener('keyup', _this._handleKeypress);\n    };\n\n    _this._show = function _callee2() {\n      var windowLayout, _ref, _ref2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              windowLayout = Dimensions.get('window');\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this._measureMenuLayout(), _this._measureAnchorLayout()]));\n\n            case 3:\n              _ref = _context2.sent;\n              _ref2 = _slicedToArray(_ref, 2);\n              menuLayout = _ref2[0];\n              anchorLayout = _ref2[1];\n\n              if (!(!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this._isAnchorCoord() || !anchorLayout.height && !_this._isAnchorCoord())) {\n                _context2.next = 10;\n                break;\n              }\n\n              requestAnimationFrame(_this._show);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState(function () {\n                return {\n                  left: anchorLayout.x,\n                  top: anchorLayout.y,\n                  anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width\n                  },\n                  menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height\n                  }\n                };\n              }, function () {\n                _this._attachListeners();\n\n                var animation = _this.props.theme.animation;\n                Animated.parallel([Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION * animation.scale,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start(function (_ref3) {\n                  var finished = _ref3.finished;\n\n                  if (finished) {\n                    _this._focusFirstDOMNode(_this._menu);\n                  }\n                });\n              });\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this._hide = function () {\n      _this._removeListeners();\n\n      var animation = _this.props.theme.animation;\n      Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION * animation.scale,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (finished) {\n        if (finished) {\n          _this.setState({\n            menuLayout: {\n              width: 0,\n              height: 0\n            }\n          });\n\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n\n          _this._focusFirstDOMNode(_this._anchor);\n\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this._updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._removeListeners();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          contentStyle = _this$props.contentStyle,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          statusBarHeight = _this$props.statusBarHeight,\n          onDismiss = _this$props.onDismiss;\n      var _this$state = this.state,\n          rendered = _this$state.rendered,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      var additionalVerticalValue = Platform.select({\n        android: statusBarHeight,\n        default: 0\n      });\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n      var windowLayout = Dimensions.get('window');\n      var positionTransforms = [];\n\n      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right > windowLayout.width - SCREEN_INDENT) {\n          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      var scrollableMenuHeight = 0;\n\n      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {\n        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n      }\n\n      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;\n\n      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]\n          })\n        });\n\n        if (top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]\n          })\n        });\n        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;\n\n        if (bottom > windowLayout.height - SCREEN_INDENT) {\n          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = _objectSpread({\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      }, scrollableMenuHeight ? {\n        height: scrollableMenuHeight\n      } : {});\n\n      var positionStyle = _objectSpread({\n        top: this._isAnchorCoord() ? top : top + additionalVerticalValue\n      }, I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(View, {\n        ref: function ref(_ref5) {\n          _this2._anchor = _ref5;\n        },\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        }\n      }, this._isAnchorCoord() ? null : anchor, rendered ? React.createElement(Portal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        }\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        }\n      })), React.createElement(View, {\n        ref: function ref(_ref4) {\n          _this2._menu = _ref4;\n        },\n        collapsable: false,\n        accessibilityViewIsModal: visible,\n        style: [styles.wrapper, positionStyle, style],\n        pointerEvents: visible ? 'box-none' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        }\n      }, React.createElement(Surface, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553\n        }\n      }, scrollableMenuHeight && React.createElement(ScrollView, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563\n        }\n      }, children) || React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 564\n        }\n      }, children))))) : null);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.Item = MenuItem;\nMenu.defaultProps = {\n  statusBarHeight: APPROX_STATUSBAR_HEIGHT\n};\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\nexport default withTheme(Menu);","map":{"version":3,"sources":["Menu.tsx"],"names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","Menu","React","Component","Item","MenuItem","defaultProps","statusBarHeight","nextProps","prevState","rendered","state","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","scaleAnimation","x","y","prevProps","_anchor","_menu","_isAnchorCoord","_measureMenuLayout","resolve","_measureAnchorLayout","anchor","_updateVisibility","Promise","_isBrowser","_focusFirstDOMNode","el","node","findNodeHandle","focusableNode","_handleDismiss","_handleKeypress","e","_attachListeners","BackHandler","Dimensions","document","_removeListeners","_show","windowLayout","requestAnimationFrame","animation","toValue","duration","easing","useNativeDriver","finished","_hide","visible","contentStyle","style","children","theme","onDismiss","additionalVerticalValue","Platform","android","default","scaleTransforms","scaleX","inputRange","outputRange","scaleY","positionTransforms","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","positionStyle","I18nManager","StyleSheet","styles","wrapper","position","shadowMenuContainer","paddingVertical","elevation","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  Animated,\n  BackHandler,\n  Dimensions,\n  Easing,\n  I18nManager,\n  LayoutRectangle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  ScrollView,\n  findNodeHandle,\n} from 'react-native';\n\nimport { withTheme } from '../../core/theming';\nimport { Theme, $Omit } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport MenuItem, { MenuItem as _MenuItem } from './MenuItem';\nimport { APPROX_STATUSBAR_HEIGHT } from '../../constants';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean;\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n   */\n  anchor: React.ReactNode | { x: number; y: number };\n  /**\n   * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n   * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n   * Pass `0` or a custom value to and customize it.\n   * This is automatically handled on iOS.\n   */\n  statusBarHeight?: number;\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style of menu's inner content.\n   */\n  contentStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, 'x'>, 'y'>;\n\ntype State = {\n  rendered: boolean;\n  top: number;\n  left: number;\n  menuLayout: Layout;\n  anchorLayout: Layout;\n  opacityAnimation: Animated.Value;\n  scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.tsx\n  static Item = MenuItem;\n\n  static defaultProps = {\n    statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return { rendered: true };\n    }\n\n    return null;\n  }\n\n  state = {\n    rendered: this.props.visible,\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      this._updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeListeners();\n  }\n\n  _anchor?: View | null = null;\n  _menu?: View | null = null;\n\n  _isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n\n  _measureMenuLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      if (this._menu) {\n        this._menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  _measureAnchorLayout = () =>\n    new Promise<LayoutRectangle>(resolve => {\n      const { anchor } = this.props;\n      if (this._isAnchorCoord()) {\n        // @ts-ignore\n        resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n        return;\n      }\n\n      if (this._anchor) {\n        this._anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  _updateVisibility = async () => {\n    // Menu is rendered in Portal, which updates items asynchronously\n    // We need to do the same here so that the ref is up-to-date\n    await Promise.resolve();\n\n    if (this.props.visible) {\n      this._show();\n    } else {\n      this._hide();\n    }\n  };\n\n  _isBrowser = () => 'document' in global;\n\n  _focusFirstDOMNode = (el: View | null | undefined) => {\n    if (el && this._isBrowser()) {\n      // When in the browser, we want to focus the first focusable item on toggle\n      // For example, when menu is shown, focus the first item in the menu\n      // And when menu is dismissed, send focus back to the button to resume tabbing\n      const node: any = findNodeHandle(el);\n      const focusableNode = node.querySelector(\n        // This is a rough list of selectors that can be focused\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      );\n\n      focusableNode && focusableNode.focus();\n    }\n  };\n\n  _handleDismiss = () => {\n    if (this.props.visible) {\n      this.props.onDismiss();\n    }\n    return true;\n  };\n\n  _handleKeypress = (e: KeyboardEvent) => {\n    if (e.key === 'Escape') {\n      this.props.onDismiss();\n    }\n  };\n\n  _attachListeners = () => {\n    BackHandler.addEventListener('hardwareBackPress', this._handleDismiss);\n    Dimensions.addEventListener('change', this._handleDismiss);\n\n    this._isBrowser() &&\n      document.addEventListener('keyup', this._handleKeypress);\n  };\n\n  _removeListeners = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this._handleDismiss);\n    Dimensions.removeEventListener('change', this._handleDismiss);\n\n    this._isBrowser() &&\n      document.removeEventListener('keyup', this._handleKeypress);\n  };\n\n  _show = async () => {\n    const windowLayout = Dimensions.get('window');\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this._measureMenuLayout(),\n      this._measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !windowLayout.width ||\n      !windowLayout.height ||\n      !menuLayout.width ||\n      !menuLayout.height ||\n      (!anchorLayout.width && !this._isAnchorCoord()) ||\n      (!anchorLayout.height && !this._isAnchorCoord())\n    ) {\n      requestAnimationFrame(this._show);\n      return;\n    }\n\n    this.setState(\n      () => ({\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      }),\n      () => {\n        this._attachListeners();\n\n        const { animation } = this.props.theme;\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start(({ finished }) => {\n          if (finished) {\n            this._focusFirstDOMNode(this._menu);\n          }\n        });\n      }\n    );\n  };\n\n  _hide = () => {\n    this._removeListeners();\n\n    const { animation } = this.props.theme;\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION * animation.scale,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(finished => {\n      if (finished) {\n        this.setState({ menuLayout: { width: 0, height: 0 } });\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n        this._focusFirstDOMNode(this._anchor);\n        this.setState({ rendered: false });\n      }\n    });\n  };\n\n  render() {\n    const {\n      visible,\n      anchor,\n      contentStyle,\n      style,\n      children,\n      theme,\n      statusBarHeight,\n      onDismiss,\n    } = this.props;\n\n    const {\n      rendered,\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    let { left, top } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: statusBarHeight,\n      default: 0,\n    });\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    const windowLayout = Dimensions.get('window');\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right > windowLayout.width - SCREEN_INDENT) {\n        left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // If the menu is larger than available vertical space,\n    // calculate the height of scrollable view\n    let scrollableMenuHeight = 0;\n\n    // Check if the menu should be scrollable\n    if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And bottom side of the screen has more space than top side\n      top <= windowLayout.height - top\n    ) {\n      // Scrollable menu should be below the anchor (expands downwards)\n      scrollableMenuHeight =\n        windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n    } else if (\n      // Check if the menu overflows from bottom side\n      top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n      // And top side of the screen has more space than bottom side\n      top >= windowLayout.height - top &&\n      // And menu overflows from top side\n      top <=\n        menuLayout.height -\n          anchorLayout.height +\n          SCREEN_INDENT -\n          additionalVerticalValue\n    ) {\n      // Scrollable menu should be above the anchor (expands upwards)\n      scrollableMenuHeight =\n        top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n    }\n\n    // Scrollable menu max height\n    scrollableMenuHeight =\n      scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n        ? windowLayout.height - 2 * SCREEN_INDENT\n        : scrollableMenuHeight;\n\n    // Menu is typically positioned below the element that generates it\n    // So first check if it fits below the anchor (expands downwards)\n    if (\n      // Check if menu fits vertically\n      top <=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue ||\n      // Or if the menu overflows from bottom side\n      (top >=\n        windowLayout.height -\n          menuLayout.height -\n          SCREEN_INDENT -\n          additionalVerticalValue &&\n        // And bottom side of the screen has more space than top side\n        top <= windowLayout.height - top)\n    ) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n      const bottom =\n        top +\n        (scrollableMenuHeight || menuLayout.height) +\n        additionalVerticalValue;\n\n      // Check if menu position has enough space from bottom side\n      if (bottom > windowLayout.height - SCREEN_INDENT) {\n        top =\n          scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n            ? -SCREEN_INDENT * 2\n            : windowLayout.height -\n              menuLayout.height -\n              SCREEN_INDENT -\n              additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n      ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n    };\n\n    const positionStyle = {\n      top: this._isAnchorCoord() ? top : top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={ref => {\n          this._anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {this._isAnchorCoord() ? null : anchor}\n        {rendered ? (\n          <Portal>\n            <TouchableWithoutFeedback onPress={onDismiss}>\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n            <View\n              ref={ref => {\n                this._menu = ref;\n              }}\n              collapsable={false}\n              accessibilityViewIsModal={visible}\n              style={[styles.wrapper, positionStyle, style]}\n              pointerEvents={visible ? 'box-none' : 'none'}\n            >\n              <Animated.View style={{ transform: positionTransforms }}>\n                <Surface\n                  style={\n                    [\n                      styles.shadowMenuContainer,\n                      shadowMenuContainerStyle,\n                      contentStyle,\n                    ] as StyleProp<ViewStyle>\n                  }\n                >\n                  {(scrollableMenuHeight && (\n                    <ScrollView>{children}</ScrollView>\n                  )) || <React.Fragment>{children}</React.Fragment>}\n                </Surface>\n              </Animated.View>\n            </View>\n          </Portal>\n        ) : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"module"}