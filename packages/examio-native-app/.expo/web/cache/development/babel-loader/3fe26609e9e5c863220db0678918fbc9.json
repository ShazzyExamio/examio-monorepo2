{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { config } from \"../config/config\";\nimport axios from 'axios';\nexport var loginFunction = function _callee(email, password) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.post(config.apiUrl + '/login/user', {\n            email: email,\n            password: password\n          }).then(function (response) {\n            if (response.data.token) {\n              console.log(response.data.user);\n              return true;\n            } else {\n              return false;\n            }\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (!axios.isAxiosError(_context.t0)) {\n            _context.next = 13;\n            break;\n          }\n\n          console.log('error message: ', _context.t0.message);\n          return _context.abrupt(\"return\", false);\n\n        case 13:\n          console.log('unexpected error: ', _context.t0);\n          return _context.abrupt(\"return\", false);\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\nexport var logout = function logout() {};","map":{"version":3,"names":["config","axios","loginFunction","email","password","post","apiUrl","then","response","data","token","console","log","user","isAxiosError","message","logout"],"sources":["/Users/shahzarkhalid/Desktop/Examio Mono Repo2/packages/examio-native-app/src/services/user.service.ts"],"sourcesContent":["import { config } from '../config/config';\nimport axios from 'axios'\n\n\nexport const loginFunction = async (email: string, password: string): Promise<Boolean> => {\n    try\n    {\n        return await axios.post(config.apiUrl + '/login/user',\n        {\n            email: email,\n            password: password\n        }).then(response => {\n            if (response.data.token) {\n                //store user#\n                console.log(response.data.user)\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n    }\n    catch(error) {\n        if (axios.isAxiosError(error)) {\n            console.log('error message: ', error.message);\n            return false;\n          } else {\n            console.log('unexpected error: ', error);\n            return false;\n          }\n    }\n  } \n\n  export const logout = () => {\n    // remove user from local storage to log user out\n  }"],"mappings":";AAAA,SAASA,MAAT;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,aAAa,GAAG,iBAAOC,KAAP,EAAsBC,QAAtB;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAAA,iCAGRH,KAAK,CAACI,IAAN,CAAWL,MAAM,CAACM,MAAP,GAAgB,aAA3B,EACb;YACIH,KAAK,EAAEA,KADX;YAEIC,QAAQ,EAAEA;UAFd,CADa,EAIVG,IAJU,CAIL,UAAAC,QAAQ,EAAI;YAChB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB,EAAyB;cAErBC,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcI,IAA1B;cACA,OAAO,IAAP;YACH,CAJD,MAKK;cACD,OAAO,KAAP;YACH;UACJ,CAbY,CAHQ;;QAAA;UAAA;;QAAA;UAAA;UAAA;;UAAA,KAmBjBZ,KAAK,CAACa,YAAN,aAnBiB;YAAA;YAAA;UAAA;;UAoBjBH,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,YAAMG,OAArC;UApBiB,iCAqBV,KArBU;;QAAA;UAuBjBJ,OAAO,CAACC,GAAR,CAAY,oBAAZ;UAvBiB,iCAwBV,KAxBU;;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA,CAAtB;AA6BL,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,GAAM,CAE3B,CAFM"},"metadata":{},"sourceType":"module"}