{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableRow.tsx\";\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableRow = function (_React$Component) {\n  _inherits(DataTableRow, _React$Component);\n\n  function DataTableRow() {\n    _classCallCheck(this, DataTableRow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTableRow).apply(this, arguments));\n  }\n\n  _createClass(DataTableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          onPress = _this$props.onPress,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"onPress\", \"style\", \"theme\"]);\n\n      var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n      return React.createElement(TouchableRipple, _extends({}, rest, {\n        onPress: onPress,\n        style: [styles.container, {\n          borderBottomColor: borderBottomColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }), React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, this.props.children));\n    }\n  }]);\n\n  return DataTableRow;\n}(React.Component);\n\nDataTableRow.displayName = 'DataTable.Row';\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow);\nexport { DataTableRow };","map":{"version":3,"sources":["DataTableRow.tsx"],"names":["DataTableRow","React","Component","displayName","onPress","style","theme","rest","borderBottomColor","color","styles","StyleSheet","container","borderStyle","borderBottomWidth","minHeight","paddingHorizontal","content","flex","flexDirection","withTheme"],"mappings":";;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,KAAA,MAAA,OAAA;;;AAEA,OAAA,eAAA;AACA,SAAA,KAAA,EAAA,KAAA;AACA,SAAA,SAAA;;AAmBMA,IAAAA,Y;;;;;;;;;;;6BAGK;MAAA,IAAA,WAAA,GACoC,KADpC,KAAA;MAAA,IACCI,OADD,GAAA,WAAA,CAAA,OAAA;MAAA,IACUC,KADV,GAAA,WAAA,CAAA,KAAA;MAAA,IACiBC,KADjB,GAAA,WAAA,CAAA,KAAA;MAAA,IAC2BC,IAD3B,GAAA,wBAAA,CAAA,WAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,OAAA,CAAA,CAAA;;MAEP,IAAMC,iBAAiB,GAAGC,KAAK,CAACH,KAAK,CAALA,IAAAA,GAAAA,KAAAA,GAANG,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAA1B,MAA0BA,EAA1B;MAKA,OACE,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;QAEE,OAAO,EAFT,OAAA;QAGE,KAAK,EAAE,CAACC,MAAM,CAAP,SAAA,EAAmB;UAAEF,iBAAiB,EAAtC;QAAmB,CAAnB,EAHT,KAGS,CAHT;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,CAAA,EAKE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA;QAAM,KAAK,EAAEE,MAAM,CAAnB,OAAA;QAAA,QAAA,EAAA;UAAA,QAAA,EAAA,YAAA;UAAA,UAAA,EAAA;QAAA;MAAA,CAAA,EAA8B,KAAA,KAAA,CANlC,QAMI,CALF,CADF;;;;;EAVuBT,KAAK,CAACC,S,CAA3BF;;AAAAA,Y,CACGG,WADHH,GACiB,eADjBA;AAsBN,IAAMU,MAAM,GAAGC,UAAU,CAAVA,MAAAA,CAAkB;EAC/BC,SAAS,EAAE;IACTC,WAAW,EADF,OAAA;IAETC,iBAAiB,EAAEH,UAAU,CAFpB,aAAA;IAGTI,SAAS,EAHA,EAAA;IAITC,iBAAiB,EALY;EACpB,CADoB;EAO/BC,OAAO,EAAE;IACPC,IAAI,EADG,CAAA;IAEPC,aAAa,EATjB;EAOW;AAPsB,CAAlBR,CAAf;AAaA,eAAeS,SAAS,CAAxB,YAAwB,CAAxB;AAGA,SAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"]},"metadata":{},"sourceType":"module"}