{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport getNavigationActionCreators from \"./routers/getNavigationActionCreators\";\nimport _getChildNavigation from \"./getChildNavigation\";\nimport getChildrenNavigationCache from \"./getChildrenNavigationCache\";\nexport default function getNavigation(router, state, dispatch, actionSubscribers, getScreenProps, getCurrentNavigation) {\n  var actions = router.getActionCreators(state, null);\n  var navigation = {\n    actions: actions,\n    router: router,\n    state: state,\n    dispatch: dispatch,\n    getScreenProps: getScreenProps,\n    getChildNavigation: function getChildNavigation(childKey) {\n      return _getChildNavigation(navigation, childKey, getCurrentNavigation);\n    },\n    isFocused: function isFocused(childKey) {\n      var _getCurrentNavigation = getCurrentNavigation().state,\n          routes = _getCurrentNavigation.routes,\n          index = _getCurrentNavigation.index;\n\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n\n      return false;\n    },\n    addListener: function addListener(eventName, handler) {\n      if (eventName !== 'action') {\n        return {\n          remove: function remove() {}\n        };\n      }\n\n      actionSubscribers.add(handler);\n      return {\n        remove: function remove() {\n          actionSubscribers.delete(handler);\n        }\n      };\n    },\n    dangerouslyGetParent: function dangerouslyGetParent() {\n      return null;\n    },\n    isFirstRouteInParent: function isFirstRouteInParent() {\n      return true;\n    },\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation())\n  };\n\n  var actionCreators = _objectSpread({}, getNavigationActionCreators(navigation.state), actions);\n\n  Object.keys(actionCreators).forEach(function (actionName) {\n    navigation[actionName] = function () {\n      return navigation.dispatch(actionCreators[actionName].apply(actionCreators, arguments));\n    };\n  });\n  return navigation;\n}","map":{"version":3,"sources":["getNavigation.js"],"names":["actions","router","navigation","state","dispatch","getScreenProps","getChildNavigation","isFocused","routes","index","getCurrentNavigation","childKey","addListener","eventName","remove","actionSubscribers","dangerouslyGetParent","isFirstRouteInParent","_childrenNavigation","getChildrenNavigationCache","actionCreators","getNavigationActionCreators","Object"],"mappings":";AAAA,OAAA,2BAAA;AACA,OAAA,mBAAA;AACA,OAAA,0BAAA;AAEA,eAAe,SAAA,aAAA,CAAA,MAAA,EAAA,KAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,cAAA,EAAA,oBAAA,EAOb;EACA,IAAMA,OAAO,GAAGC,MAAM,CAANA,iBAAAA,CAAAA,KAAAA,EAAhB,IAAgBA,CAAhB;EAEA,IAAMC,UAAU,GAAG;IACjBF,OAAO,EADU,OAAA;IAEjBC,MAAM,EAFW,MAAA;IAGjBE,KAAK,EAHY,KAAA;IAIjBC,QAAQ,EAJS,QAAA;IAKjBC,cAAc,EALG,cAAA;IAMjBC,kBAAkB,EAAE,SAAA,kBAAA,CAAA,QAAA,EAAQ;MAAA,OAC1BA,mBAAkB,CAAA,UAAA,EAAA,QAAA,EADQ,oBACR,CADQ;IANX,CAAA;IAQjBC,SAAS,EAAE,SAAA,SAAA,CAAA,QAAA,EAAY;MAAA,IAAA,qBAAA,GACKG,oBAAoB,GADzB,KAAA;MAAA,IACbF,MADa,GAAA,qBAAA,CAAA,MAAA;MAAA,IACLC,KADK,GAAA,qBAAA,CAAA,KAAA;;MAErB,IAAIE,QAAQ,IAARA,IAAAA,IAAoBH,MAAM,CAANA,KAAM,CAANA,CAAAA,GAAAA,KAAxB,QAAA,EAAwD;QACtD,OAAA,IAAA;MAEF;;MAAA,OAAA,KAAA;IAbe,CAAA;IAejBI,WAAW,EAAE,SAAA,WAAA,CAAA,SAAA,EAAA,OAAA,EAAwB;MACnC,IAAIC,SAAS,KAAb,QAAA,EAA4B;QAC1B,OAAO;UAAEC,MAAM,EAAE,SAAA,MAAA,GAAM,CAAvB;QAAO,CAAP;MAEFC;;MAAAA,iBAAiB,CAAjBA,GAAAA,CAAAA,OAAAA;MACA,OAAO;QACLD,MAAM,EAAE,SAAA,MAAA,GAAM;UACZC,iBAAiB,CAAjBA,MAAAA,CAAAA,OAAAA;QAFJ;MAAO,CAAP;IApBe,CAAA;IA0BjBC,oBAAoB,EAAE,SAAA,oBAAA,GAAA;MAAA,OAAA,IAAA;IA1BL,CAAA;IA2BjBC,oBAAoB,EAAE,SAAA,oBAAA,GAAA;MAAA,OAAA,IAAA;IA3BL,CAAA;IA4BjBC,mBAAmB,EAAEC,0BAA0B,CAACT,oBA5BlD,EA4BiD;EA5B9B,CAAnB;;EA+BA,IAAMU,cAAc,GAAA,aAAA,CAAA,EAAA,EACfC,2BAA2B,CAACnB,UAAU,CADvB,KACY,CADZ,EAApB,OAAoB,CAApB;;EAKAoB,MAAM,CAANA,IAAAA,CAAAA,cAAAA,EAAAA,OAAAA,CAAoC,UAAA,UAAA,EAAc;IAChDpB,UAAU,CAAVA,UAAU,CAAVA,GAAyB,YAAA;MAAA,OACvBA,UAAU,CAAVA,QAAAA,CAAoBkB,cAAc,CAAdA,UAAc,CAAdA,CAAAA,KAAAA,CAAAA,cAAAA,EADG,SACHA,CAApBlB,CADuB;IAAzBA,CAAAA;EADFoB,CAAAA;EAKA,OAAA,UAAA;AACD","sourcesContent":["import getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildNavigation from './getChildNavigation';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nexport default function getNavigation(\n  router,\n  state,\n  dispatch,\n  actionSubscribers,\n  getScreenProps,\n  getCurrentNavigation\n) {\n  const actions = router.getActionCreators(state, null);\n\n  const navigation = {\n    actions,\n    router,\n    state,\n    dispatch,\n    getScreenProps,\n    getChildNavigation: childKey =>\n      getChildNavigation(navigation, childKey, getCurrentNavigation),\n    isFocused: childKey => {\n      const { routes, index } = getCurrentNavigation().state;\n      if (childKey == null || routes[index].key === childKey) {\n        return true;\n      }\n      return false;\n    },\n    addListener: (eventName, handler) => {\n      if (eventName !== 'action') {\n        return { remove: () => {} };\n      }\n      actionSubscribers.add(handler);\n      return {\n        remove: () => {\n          actionSubscribers.delete(handler);\n        },\n      };\n    },\n    dangerouslyGetParent: () => null,\n    isFirstRouteInParent: () => true,\n    _childrenNavigation: getChildrenNavigationCache(getCurrentNavigation()),\n  };\n\n  const actionCreators = {\n    ...getNavigationActionCreators(navigation.state),\n    ...actions,\n  };\n\n  Object.keys(actionCreators).forEach(actionName => {\n    navigation[actionName] = (...args) =>\n      navigation.dispatch(actionCreators[actionName](...args));\n  });\n\n  return navigation;\n}\n"]},"metadata":{},"sourceType":"module"}