{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTablePagination.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"../IconButton\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\n\nvar DataTablePagination = function (_React$Component) {\n  _inherits(DataTablePagination, _React$Component);\n\n  function DataTablePagination() {\n    _classCallCheck(this, DataTablePagination);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTablePagination).apply(this, arguments));\n  }\n\n  _createClass(DataTablePagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          page = _this$props.page,\n          numberOfPages = _this$props.numberOfPages,\n          onPageChange = _this$props.onPageChange,\n          style = _this$props.style,\n          theme = _this$props.theme,\n          rest = _objectWithoutProperties(_this$props, [\"label\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\"]);\n\n      var labelColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }), React.createElement(Text, {\n        style: [styles.label, {\n          color: labelColor\n        }],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, label), React.createElement(IconButton, {\n        icon: function icon(_ref) {\n          var size = _ref.size,\n              color = _ref.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"chevron-left\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            }\n          });\n        },\n        color: theme.colors.text,\n        disabled: page === 0,\n        onPress: function onPress() {\n          return onPageChange(page - 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }), React.createElement(IconButton, {\n        icon: function icon(_ref2) {\n          var size = _ref2.size,\n              color = _ref2.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"chevron-right\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            }\n          });\n        },\n        color: theme.colors.text,\n        disabled: page === numberOfPages - 1,\n        onPress: function onPress() {\n          return onPageChange(page + 1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }));\n    }\n  }]);\n\n  return DataTablePagination;\n}(React.Component);\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 44\n  }\n});\nexport default withTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"sources":["DataTablePagination.tsx"],"names":["DataTablePagination","React","Component","displayName","label","page","numberOfPages","onPageChange","style","theme","rest","labelColor","color","styles","size","I18nManager","StyleSheet","container","justifyContent","flexDirection","alignItems","paddingLeft","fontSize","marginRight","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport IconButton from '../IconButton';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Label text to display\n   */\n  label?: React.ReactNode;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTablePagination extends React.Component<Props> {\n  static displayName = 'DataTable.Pagination';\n\n  render() {\n    const {\n      label,\n      page,\n      numberOfPages,\n      onPageChange,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const labelColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        <Text style={[styles.label, { color: labelColor }]} numberOfLines={1}>\n          {label}\n        </Text>\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-left\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === 0}\n          onPress={() => onPageChange(page - 1)}\n        />\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"chevron-right\"\n              color={color}\n              size={size}\n              direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          color={theme.colors.text}\n          disabled={page === numberOfPages - 1}\n          onPress={() => onPageChange(page + 1)}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n  },\n\n  label: {\n    fontSize: 12,\n    marginRight: 44,\n  },\n});\n\nexport default withTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}