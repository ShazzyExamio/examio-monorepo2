{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-stack/src/views/Header/Header.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { MaskedViewIOS } from \"react-native-web/dist/index\";\nimport { ThemeContext, ThemeColors, withOrientation, SafeAreaView } from 'react-navigation';\nimport HeaderTitle from \"./HeaderTitle\";\nimport HeaderBackButton from \"./HeaderBackButton\";\nimport ModularHeaderBackButton from \"./ModularHeaderBackButton\";\nimport HeaderStyleInterpolator from \"./HeaderStyleInterpolator\";\nvar APPBAR_HEIGHT = Platform.select({\n  ios: 44,\n  android: 56,\n  default: 64\n});\nvar STATUSBAR_HEIGHT = Platform.select({\n  ios: 20,\n  default: 0\n});\nvar TITLE_OFFSET_CENTER_ALIGN = Platform.select({\n  ios: 70,\n  default: 56\n});\nvar TITLE_OFFSET_LEFT_ALIGN = Platform.select({\n  ios: 20,\n  android: 56,\n  default: 64\n});\n\nvar getTitleOffsets = function getTitleOffsets(layoutPreset, hasLeftComponent, hasRightComponent) {\n  if (layoutPreset === 'left') {\n    var style = {\n      left: TITLE_OFFSET_LEFT_ALIGN,\n      right: TITLE_OFFSET_LEFT_ALIGN\n    };\n\n    if (!hasLeftComponent) {\n      style.left = Platform.OS === 'web' ? 16 : 0;\n    }\n\n    if (!hasRightComponent) {\n      style.right = 0;\n    }\n\n    return style;\n  } else if (layoutPreset === 'center') {\n    var _style = {\n      left: TITLE_OFFSET_CENTER_ALIGN,\n      right: TITLE_OFFSET_CENTER_ALIGN\n    };\n\n    if (!hasLeftComponent && !hasRightComponent) {\n      _style.left = 0;\n      _style.right = 0;\n    }\n\n    return _style;\n  }\n\n  return undefined;\n};\n\nvar getAppBarHeight = function getAppBarHeight(isLandscape) {\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nvar Header = function (_React$PureComponent) {\n  _inherits(Header, _React$PureComponent);\n\n  function Header() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Header)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      widths: {}\n    };\n\n    _this.renderTitleComponent = function (props) {\n      var layoutPreset = _this.props.layoutPreset;\n      var options = props.scene.descriptor.options;\n      var headerTitle = options.headerTitle;\n\n      if (React.isValidElement(headerTitle)) {\n        return headerTitle;\n      }\n\n      var titleString = _this.getHeaderTitleString(props.scene);\n\n      var titleStyle = options.headerTitleStyle;\n      var color = options.headerTintColor;\n      var allowFontScaling = options.headerTitleAllowFontScaling;\n      var onLayout = layoutPreset === 'center' ? function (e) {\n        var width = e.nativeEvent.layout.width;\n\n        _this.setState(function (state) {\n          return {\n            widths: _objectSpread({}, state.widths, _defineProperty({}, props.scene.key, width))\n          };\n        });\n      } : undefined;\n      var render = headerTitle && typeof headerTitle !== 'string' ? headerTitle : function (props) {\n        return React.createElement(HeaderTitle, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          }\n        }));\n      };\n      return render({\n        onLayout: onLayout,\n        allowFontScaling: Boolean(allowFontScaling),\n        style: [color ? {\n          color: color\n        } : null, layoutPreset === 'center' ? {\n          textAlign: 'center'\n        } : {\n          textAlign: 'left'\n        }, titleStyle],\n        children: titleString\n      });\n    };\n\n    _this.renderLeftComponent = function (props) {\n      var options = props.scene.descriptor.options;\n\n      if (React.isValidElement(options.headerLeft) || options.headerLeft === null) {\n        return options.headerLeft;\n      }\n\n      if (!options.headerLeft && props.scene.index === 0) {\n        return;\n      }\n\n      var backButtonTitle = _this.getBackButtonTitleString(props.scene);\n\n      var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);\n\n      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;\n      var RenderedLeftComponent = options.headerLeft || HeaderBackButton;\n\n      var goBack = function goBack() {\n        requestAnimationFrame(function () {\n          props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);\n        });\n      };\n\n      return React.createElement(RenderedLeftComponent, {\n        onPress: goBack,\n        pressColorAndroid: options.headerPressColorAndroid,\n        tintColor: options.headerTintColor,\n        backImage: options.headerBackImage,\n        title: backButtonTitle,\n        truncatedTitle: truncatedBackButtonTitle,\n        backTitleVisible: _this.props.backTitleVisible,\n        allowFontScaling: options.headerBackAllowFontScaling,\n        titleStyle: options.headerBackTitleStyle,\n        layoutPreset: _this.props.layoutPreset,\n        width: width,\n        scene: props.scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        }\n      });\n    };\n\n    _this.renderModularLeftComponent = function (props, ButtonContainerComponent, LabelContainerComponent) {\n      var _props$scene$descript = props.scene.descriptor,\n          options = _props$scene$descript.options,\n          navigation = _props$scene$descript.navigation;\n\n      var backButtonTitle = _this.getBackButtonTitleString(props.scene);\n\n      var truncatedBackButtonTitle = _this.getTruncatedBackButtonTitle(props.scene);\n\n      var width = _this.state.widths[props.scene.key] ? (_this.props.layout.initWidth - _this.state.widths[props.scene.key]) / 2 : undefined;\n\n      var goBack = function goBack() {\n        requestAnimationFrame(function () {\n          navigation.goBack(props.scene.descriptor.key);\n        });\n      };\n\n      return React.createElement(ModularHeaderBackButton, {\n        onPress: goBack,\n        ButtonContainerComponent: ButtonContainerComponent,\n        LabelContainerComponent: LabelContainerComponent,\n        backTitleVisible: _this.props.backTitleVisible,\n        pressColorAndroid: options.headerPressColorAndroid,\n        tintColor: options.headerTintColor,\n        backImage: options.headerBackImage,\n        title: backButtonTitle,\n        truncatedTitle: truncatedBackButtonTitle,\n        titleStyle: options.headerBackTitleStyle,\n        layoutPreset: _this.props.layoutPreset,\n        width: width,\n        scene: props.scene,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        }\n      });\n    };\n\n    _this.renderRightComponent = function (props) {\n      var headerRight = props.scene.descriptor.options.headerRight;\n\n      if (typeof headerRight === 'function') {\n        return headerRight();\n      }\n\n      return headerRight || null;\n    };\n\n    _this.renderLeft = function (props) {\n      var options = props.scene.descriptor.options;\n      var transitionPreset = _this.props.transitionPreset;\n      var style = props.style;\n\n      if (options.headerLeftContainerStyle) {\n        style = [style, options.headerLeftContainerStyle];\n      }\n\n      if (transitionPreset !== 'uikit' || options.headerBackImage || options.headerLeft || options.headerLeft === null) {\n        return _this.renderSubView(_objectSpread({}, props, {\n          style: style\n        }), 'left', _this.renderLeftComponent, _this.props.leftInterpolator);\n      } else {\n        return _this.renderModularSubView(_objectSpread({}, props, {\n          style: style\n        }), 'left', _this.renderModularLeftComponent, _this.props.leftLabelInterpolator, _this.props.leftButtonInterpolator);\n      }\n    };\n\n    _this.renderTitle = function (props, options) {\n      var _this$props = _this.props,\n          layoutPreset = _this$props.layoutPreset,\n          transitionPreset = _this$props.transitionPreset;\n      var style = [{\n        justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start'\n      }, getTitleOffsets(layoutPreset, options.hasLeftComponent, options.hasRightComponent), options.headerTitleContainerStyle];\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: style\n      }), 'title', _this.renderTitleComponent, transitionPreset === 'uikit' ? _this.props.titleFromLeftInterpolator : _this.props.titleInterpolator);\n    };\n\n    _this.renderRight = function (props) {\n      var options = props.scene.descriptor.options;\n      var style = props.style;\n\n      if (options.headerRightContainerStyle) {\n        style = [style, options.headerRightContainerStyle];\n      }\n\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: style\n      }), 'right', _this.renderRightComponent, _this.props.rightInterpolator);\n    };\n\n    _this.renderBackground = function (props) {\n      var _props$scene = props.scene,\n          index = _props$scene.index,\n          options = _props$scene.descriptor.options;\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      return _this.renderSubView(_objectSpread({}, props, {\n        style: StyleSheet.absoluteFill\n      }), 'background', function () {\n        return typeof options.headerBackground === 'function' ? options.headerBackground() : options.headerBackground;\n      }, _this.props.backgroundInterpolator);\n    };\n\n    _this.renderModularSubView = function (props, name, renderer, labelStyleInterpolator, buttonStyleInterpolator) {\n      var scene = props.scene;\n      var index = scene.index,\n          isStale = scene.isStale,\n          key = scene.key;\n\n      if (index === 0) {\n        return;\n      }\n\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      var ButtonContainer = function ButtonContainer(_ref) {\n        var children = _ref.children;\n        return React.createElement(Animated.View, {\n          style: [buttonStyleInterpolator(_objectSpread({}, _this.props, {}, props))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483\n          }\n        }, children);\n      };\n\n      var LabelContainer = function LabelContainer(_ref2) {\n        var children = _ref2.children;\n        return React.createElement(Animated.View, {\n          style: [labelStyleInterpolator(_objectSpread({}, _this.props, {}, props))],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491\n          }\n        }, children);\n      };\n\n      var subView = renderer(props, ButtonContainer, LabelContainer);\n\n      if (subView === null) {\n        return subView;\n      }\n\n      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n      return React.createElement(View, {\n        key: name + \"_\" + key,\n        pointerEvents: pointerEvents,\n        style: [styles.item, styles[name], props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        }\n      }, subView);\n    };\n\n    _this.renderSubView = function (props, name, renderer, styleInterpolator) {\n      var scene = props.scene;\n      var index = scene.index,\n          isStale = scene.isStale,\n          key = scene.key;\n      var offset = _this.props.navigation.state.index - index;\n\n      if (Math.abs(offset) > 2) {\n        return null;\n      }\n\n      var subView = renderer(props);\n\n      if (subView == null) {\n        return null;\n      }\n\n      var pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n      return React.createElement(Animated.View, {\n        pointerEvents: pointerEvents,\n        key: name + \"_\" + key,\n        style: [styles.item, styles[name], props.style, styleInterpolator && styleInterpolator(_objectSpread({}, _this.props, {}, props))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547\n        }\n      }, subView);\n    };\n\n    _this.renderHeader = function (props) {\n      var options = props.scene.descriptor.options;\n\n      if (options.header === null || options.headerShown === false) {\n        return null;\n      }\n\n      var left = _this.renderLeft(props);\n\n      var right = _this.renderRight(props);\n\n      var title = _this.renderTitle(props, {\n        hasLeftComponent: !!left,\n        hasRightComponent: !!right,\n        headerTitleContainerStyle: options.headerTitleContainerStyle\n      });\n\n      var transitionPreset = _this.props.transitionPreset;\n      var wrapperProps = {\n        style: styles.header,\n        key: \"scene_\" + props.scene.key\n      };\n\n      if (options.headerLeft || options.headerBackImage || Platform.OS !== 'ios' || transitionPreset !== 'uikit') {\n        return React.createElement(View, _extends({}, wrapperProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          }\n        }), title, left, right);\n      } else {\n        return React.createElement(MaskedViewIOS, _extends({}, wrapperProps, {\n          maskElement: React.createElement(View, {\n            style: styles.iconMaskContainer,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 604\n            }\n          }, React.createElement(Image, {\n            source: require(\"../assets/back-icon-mask.png\"),\n            style: styles.iconMask,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 605\n            }\n          }), React.createElement(View, {\n            style: styles.iconMaskFillerRect,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 609\n            }\n          })),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          }\n        }), title, left, right);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"getHeaderTitleString\",\n    value: function getHeaderTitleString(scene) {\n      var options = scene.descriptor.options;\n\n      if (typeof options.headerTitle === 'string') {\n        return options.headerTitle;\n      }\n\n      if (options.title && typeof options.title !== 'string' && __DEV__) {\n        throw new Error(\"Invalid title for route \\\"\" + scene.route.routeName + \"\\\" - title must be string or null, instead it was of type \" + typeof options.title);\n      }\n\n      return options.title;\n    }\n  }, {\n    key: \"getLastScene\",\n    value: function getLastScene(scene) {\n      return this.props.scenes.find(function (s) {\n        return s.index === scene.index - 1;\n      });\n    }\n  }, {\n    key: \"getBackButtonTitleString\",\n    value: function getBackButtonTitleString(scene) {\n      var lastScene = this.getLastScene(scene);\n\n      if (!lastScene) {\n        return null;\n      }\n\n      var headerBackTitle = lastScene.descriptor.options.headerBackTitle;\n\n      if (headerBackTitle || headerBackTitle === null) {\n        return headerBackTitle;\n      }\n\n      return this.getHeaderTitleString(lastScene);\n    }\n  }, {\n    key: \"getTruncatedBackButtonTitle\",\n    value: function getTruncatedBackButtonTitle(scene) {\n      var lastScene = this.getLastScene(scene);\n\n      if (!lastScene) {\n        return null;\n      }\n\n      return lastScene.descriptor.options.headerTruncatedBackTitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var appBar;\n      var background;\n      var _this$props2 = this.props,\n          mode = _this$props2.mode,\n          scene = _this$props2.scene,\n          isLandscape = _this$props2.isLandscape;\n\n      if (mode === 'float') {\n        var scenesByIndex = {};\n        this.props.scenes.forEach(function (scene) {\n          scenesByIndex[scene.index] = scene;\n        });\n        var scenesProps = Object.values(scenesByIndex).map(function (scene) {\n          return {\n            position: _this2.props.position,\n            scene: scene\n          };\n        });\n        appBar = scenesProps.map(function (props) {\n          return _this2.renderHeader(props);\n        });\n        background = scenesProps.map(function (props) {\n          return _this2.renderBackground(props);\n        });\n      } else {\n        var headerProps = {\n          position: new Animated.Value(this.props.scene.index),\n          scene: this.props.scene\n        };\n        appBar = this.renderHeader(headerProps);\n        background = this.renderBackground(headerProps);\n      }\n\n      var options = scene.descriptor.options;\n      var _options$headerStyle = options.headerStyle,\n          headerStyle = _options$headerStyle === void 0 ? {} : _options$headerStyle;\n      var headerStyleObj = StyleSheet.flatten(headerStyle);\n      var appBarHeight = getAppBarHeight(isLandscape);\n\n      var alignItems = headerStyleObj.alignItems,\n          justifyContent = headerStyleObj.justifyContent,\n          flex = headerStyleObj.flex,\n          flexDirection = headerStyleObj.flexDirection,\n          flexGrow = headerStyleObj.flexGrow,\n          flexShrink = headerStyleObj.flexShrink,\n          flexBasis = headerStyleObj.flexBasis,\n          flexWrap = headerStyleObj.flexWrap,\n          position = headerStyleObj.position,\n          padding = headerStyleObj.padding,\n          paddingHorizontal = headerStyleObj.paddingHorizontal,\n          paddingRight = headerStyleObj.paddingRight,\n          paddingLeft = headerStyleObj.paddingLeft,\n          top = headerStyleObj.top,\n          right = headerStyleObj.right,\n          bottom = headerStyleObj.bottom,\n          left = headerStyleObj.left,\n          safeHeaderStyle = _objectWithoutProperties(headerStyleObj, [\"alignItems\", \"justifyContent\", \"flex\", \"flexDirection\", \"flexGrow\", \"flexShrink\", \"flexBasis\", \"flexWrap\", \"position\", \"padding\", \"paddingHorizontal\", \"paddingRight\", \"paddingLeft\", \"top\", \"right\", \"bottom\", \"left\"]);\n\n      if (__DEV__) {\n        warnIfHeaderStyleDefined(alignItems, 'alignItems');\n        warnIfHeaderStyleDefined(justifyContent, 'justifyContent');\n        warnIfHeaderStyleDefined(flex, 'flex');\n        warnIfHeaderStyleDefined(flexDirection, 'flexDirection');\n        warnIfHeaderStyleDefined(flexGrow, 'flexGrow');\n        warnIfHeaderStyleDefined(flexShrink, 'flexShrink');\n        warnIfHeaderStyleDefined(flexBasis, 'flexBasis');\n        warnIfHeaderStyleDefined(flexWrap, 'flexWrap');\n        warnIfHeaderStyleDefined(padding, 'padding');\n        warnIfHeaderStyleDefined(position, 'position');\n        warnIfHeaderStyleDefined(paddingHorizontal, 'paddingHorizontal');\n        warnIfHeaderStyleDefined(paddingRight, 'paddingRight');\n        warnIfHeaderStyleDefined(paddingLeft, 'paddingLeft');\n        warnIfHeaderStyleDefined(top, 'top');\n        warnIfHeaderStyleDefined(right, 'right');\n        warnIfHeaderStyleDefined(bottom, 'bottom');\n        warnIfHeaderStyleDefined(left, 'left');\n      }\n\n      var isDark = this.context === 'dark';\n      var containerStyles = [options.headerTransparent ? isDark ? styles.transparentContainerDark : styles.transparentContainerLight : isDark ? styles.containerDark : styles.containerLight, {\n        height: appBarHeight\n      }, safeHeaderStyle];\n      var headerForceInset = options.headerForceInset;\n      var forceInset = headerForceInset || {\n        top: 'always',\n        bottom: 'never',\n        horizontal: 'always'\n      };\n      var backgroundColor = safeHeaderStyle.backgroundColor;\n\n      if (!backgroundColor) {\n        backgroundColor = isDark ? ThemeColors.dark.header : ThemeColors.light.header;\n      }\n\n      return React.createElement(Animated.View, {\n        style: [this.props.layoutInterpolator(this.props), Platform.OS === 'ios' && !options.headerTransparent ? {\n          backgroundColor: backgroundColor\n        } : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        }\n      }, React.createElement(SafeAreaView, {\n        forceInset: forceInset,\n        style: containerStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738\n        }\n      }, background, React.createElement(View, {\n        style: styles.flexOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        }\n      }, appBar)));\n    }\n  }]);\n\n  return Header;\n}(React.PureComponent);\n\nHeader.contextType = ThemeContext;\nHeader.defaultProps = {\n  layoutInterpolator: HeaderStyleInterpolator.forLayout,\n  leftInterpolator: HeaderStyleInterpolator.forLeft,\n  leftButtonInterpolator: HeaderStyleInterpolator.forLeftButton,\n  leftLabelInterpolator: HeaderStyleInterpolator.forLeftLabel,\n  titleFromLeftInterpolator: HeaderStyleInterpolator.forCenterFromLeft,\n  titleInterpolator: HeaderStyleInterpolator.forCenter,\n  rightInterpolator: HeaderStyleInterpolator.forRight,\n  backgroundInterpolator: HeaderStyleInterpolator.forBackground\n};\n\nfunction warnIfHeaderStyleDefined(value, styleProp) {\n  if (styleProp === 'position' && value === 'absolute') {\n    console.warn(\"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the headerTransparent navigationOption.\");\n  } else if (value !== undefined) {\n    console.warn(styleProp + \" was given a value of \" + value + \", this has no effect on headerStyle.\");\n  }\n}\n\nvar platformContainerStylesLight = Platform.select({\n  android: {\n    elevation: 4\n  },\n  web: {\n    boxShadow: \"0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)\"\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.light.headerBorder\n  }\n});\nvar platformContainerStylesDark = Platform.select({\n  android: {\n    elevation: 4\n  },\n  web: {\n    boxShadow: \"0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)\"\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.dark.headerBorder\n  }\n});\nvar styles = StyleSheet.create({\n  containerLight: _objectSpread({}, platformContainerStylesLight, {\n    backgroundColor: ThemeColors.light.header\n  }),\n  containerDark: _objectSpread({}, platformContainerStylesDark, {\n    backgroundColor: ThemeColors.dark.header\n  }),\n  transparentContainerLight: _objectSpread({}, platformContainerStylesLight, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0\n  }),\n  transparentContainerDark: _objectSpread({}, platformContainerStylesDark, {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0\n  }),\n  header: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    flexDirection: 'row'\n  }),\n  item: {\n    backgroundColor: 'transparent'\n  },\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#d8d8d8',\n    marginLeft: -5\n  },\n  iconMask: {\n    height: 23,\n    width: 14.5,\n    marginLeft: 8.5,\n    marginTop: -2.5,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{\n      scaleX: I18nManager.isRTL ? -1 : 1\n    }]\n  },\n  background: {},\n  title: {\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  flexOne: {\n    flex: 1\n  }\n});\nexport default _extends(withOrientation(Header), {\n  get HEIGHT() {\n    return APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n  }\n\n});","map":{"version":3,"sources":["Header.tsx"],"names":["APPBAR_HEIGHT","Platform","ios","android","default","STATUSBAR_HEIGHT","TITLE_OFFSET_CENTER_ALIGN","TITLE_OFFSET_LEFT_ALIGN","getTitleOffsets","layoutPreset","style","left","right","getAppBarHeight","isLandscape","Header","React","PureComponent","contextType","ThemeContext","defaultProps","layoutInterpolator","HeaderStyleInterpolator","leftInterpolator","leftButtonInterpolator","leftLabelInterpolator","titleFromLeftInterpolator","titleInterpolator","rightInterpolator","backgroundInterpolator","state","widths","scene","options","s","lastScene","headerBackTitle","renderTitleComponent","props","headerTitle","titleString","titleStyle","color","allowFontScaling","onLayout","width","e","render","Boolean","textAlign","children","renderLeftComponent","backButtonTitle","truncatedBackButtonTitle","RenderedLeftComponent","goBack","requestAnimationFrame","renderModularLeftComponent","navigation","renderRightComponent","headerRight","renderLeft","transitionPreset","renderTitle","justifyContent","renderRight","renderBackground","index","offset","Math","StyleSheet","renderModularSubView","isStale","key","ButtonContainer","buttonStyleInterpolator","LabelContainer","labelStyleInterpolator","subView","renderer","pointerEvents","name","styles","renderSubView","styleInterpolator","renderHeader","title","hasLeftComponent","hasRightComponent","headerTitleContainerStyle","wrapperProps","require","mode","scenesByIndex","scenesProps","Object","position","appBar","background","headerProps","Animated","headerStyle","headerStyleObj","appBarHeight","alignItems","flex","flexDirection","flexGrow","flexShrink","flexBasis","flexWrap","padding","paddingHorizontal","paddingRight","paddingLeft","top","bottom","safeHeaderStyle","warnIfHeaderStyleDefined","isDark","containerStyles","height","headerForceInset","forceInset","horizontal","backgroundColor","ThemeColors","styleProp","value","console","platformContainerStylesLight","elevation","web","boxShadow","borderBottomWidth","borderBottomColor","platformContainerStylesDark","containerLight","containerDark","transparentContainerLight","transparentContainerDark","header","item","iconMaskContainer","iconMaskFillerRect","marginLeft","iconMask","marginTop","alignSelf","resizeMode","transform","scaleX","I18nManager","flexOne","withOrientation"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport {\n  Animated,\n  Image,\n  Platform,\n  StyleSheet,\n  View,\n  I18nManager,\n  MaskedViewIOS,\n  ViewStyle,\n  LayoutChangeEvent,\n  StyleProp,\n  TextProps,\n} from 'react-native';\n\nimport {\n  ThemeContext,\n  ThemeColors,\n  withOrientation,\n  SafeAreaView,\n} from 'react-navigation';\n\nimport HeaderTitle from './HeaderTitle';\nimport HeaderBackButton from './HeaderBackButton';\nimport ModularHeaderBackButton from './ModularHeaderBackButton';\nimport HeaderStyleInterpolator from './HeaderStyleInterpolator';\nimport {\n  Scene,\n  HeaderLayoutPreset,\n  SceneInterpolatorProps,\n  HeaderProps,\n  HeaderBackButtonProps,\n} from '../../types';\n\ntype Props = HeaderProps & {\n  leftLabelInterpolator: (props: SceneInterpolatorProps) => any;\n  leftButtonInterpolator: (props: SceneInterpolatorProps) => any;\n  titleFromLeftInterpolator: (props: SceneInterpolatorProps) => any;\n  layoutInterpolator: (props: SceneInterpolatorProps) => any;\n  theme: string;\n};\n\ntype SubviewProps = {\n  position: Animated.AnimatedInterpolation;\n  scene: Scene;\n  style?: StyleProp<ViewStyle>;\n};\n\ntype SubviewName = 'left' | 'right' | 'title' | 'background';\n\ntype State = {\n  widths: { [key: string]: number };\n};\n\nconst APPBAR_HEIGHT = Platform.select({\n  ios: 44,\n  android: 56,\n  default: 64,\n});\nconst STATUSBAR_HEIGHT = Platform.select({\n  ios: 20,\n  default: 0,\n});\n\n// These can be adjusted by using headerTitleContainerStyle on navigationOptions\nconst TITLE_OFFSET_CENTER_ALIGN = Platform.select({\n  ios: 70,\n  default: 56,\n});\n\nconst TITLE_OFFSET_LEFT_ALIGN = Platform.select({\n  ios: 20,\n  android: 56,\n  default: 64,\n});\n\nconst getTitleOffsets = (\n  layoutPreset: HeaderLayoutPreset,\n  hasLeftComponent: boolean,\n  hasRightComponent: boolean\n): ViewStyle | undefined => {\n  if (layoutPreset === 'left') {\n    // Maybe at some point we should do something different if the back title is\n    // explicitly enabled, for now people can control it manually\n\n    let style = {\n      left: TITLE_OFFSET_LEFT_ALIGN,\n      right: TITLE_OFFSET_LEFT_ALIGN,\n    };\n\n    if (!hasLeftComponent) {\n      style.left = Platform.OS === 'web' ? 16 : 0;\n    }\n    if (!hasRightComponent) {\n      style.right = 0;\n    }\n\n    return style;\n  } else if (layoutPreset === 'center') {\n    let style = {\n      left: TITLE_OFFSET_CENTER_ALIGN,\n      right: TITLE_OFFSET_CENTER_ALIGN,\n    };\n    if (!hasLeftComponent && !hasRightComponent) {\n      style.left = 0;\n      style.right = 0;\n    }\n\n    return style;\n  }\n\n  return undefined;\n};\n\nconst getAppBarHeight = (isLandscape: boolean) => {\n  if (Platform.OS === 'ios') {\n    // @ts-ignore\n    if (isLandscape && !Platform.isPad) {\n      return 32;\n    } else {\n      return 44;\n    }\n  } else if (Platform.OS === 'android') {\n    return 56;\n  } else {\n    return 64;\n  }\n};\n\nclass Header extends React.PureComponent<Props, State> {\n  static contextType = ThemeContext;\n\n  context!: React.ContextType<typeof ThemeContext>;\n\n  static defaultProps = {\n    layoutInterpolator: HeaderStyleInterpolator.forLayout,\n    leftInterpolator: HeaderStyleInterpolator.forLeft,\n    leftButtonInterpolator: HeaderStyleInterpolator.forLeftButton,\n    leftLabelInterpolator: HeaderStyleInterpolator.forLeftLabel,\n    titleFromLeftInterpolator: HeaderStyleInterpolator.forCenterFromLeft,\n    titleInterpolator: HeaderStyleInterpolator.forCenter,\n    rightInterpolator: HeaderStyleInterpolator.forRight,\n    backgroundInterpolator: HeaderStyleInterpolator.forBackground,\n  };\n\n  state: State = {\n    widths: {},\n  };\n\n  private getHeaderTitleString(scene: Scene) {\n    const options = scene.descriptor.options;\n    if (typeof options.headerTitle === 'string') {\n      return options.headerTitle;\n    }\n\n    if (options.title && typeof options.title !== 'string' && __DEV__) {\n      throw new Error(\n        `Invalid title for route \"${\n          scene.route.routeName\n        }\" - title must be string or null, instead it was of type ${typeof options.title}`\n      );\n    }\n\n    return options.title;\n  }\n\n  private getLastScene(scene: Scene) {\n    return this.props.scenes.find(s => s.index === scene.index - 1);\n  }\n\n  private getBackButtonTitleString(scene: Scene) {\n    const lastScene = this.getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    const { headerBackTitle } = lastScene.descriptor.options;\n    if (headerBackTitle || headerBackTitle === null) {\n      return headerBackTitle;\n    }\n    return this.getHeaderTitleString(lastScene);\n  }\n\n  private getTruncatedBackButtonTitle(scene: Scene) {\n    const lastScene = this.getLastScene(scene);\n    if (!lastScene) {\n      return null;\n    }\n    return lastScene.descriptor.options.headerTruncatedBackTitle;\n  }\n\n  private renderTitleComponent = (props: SubviewProps) => {\n    const { layoutPreset } = this.props;\n    const { options } = props.scene.descriptor;\n    const headerTitle = options.headerTitle;\n    if (React.isValidElement(headerTitle)) {\n      return headerTitle;\n    }\n    const titleString = this.getHeaderTitleString(props.scene);\n\n    const titleStyle = options.headerTitleStyle;\n    const color = options.headerTintColor;\n    const allowFontScaling = options.headerTitleAllowFontScaling;\n\n    // When title is centered, the width of left/right components depends on the\n    // calculated size of the title.\n    const onLayout =\n      layoutPreset === 'center'\n        ? (e: LayoutChangeEvent) => {\n            const { width } = e.nativeEvent.layout;\n\n            this.setState(state => ({\n              widths: {\n                ...state.widths,\n                [props.scene.key]: width,\n              },\n            }));\n          }\n        : undefined;\n\n    const render =\n      headerTitle && typeof headerTitle !== 'string'\n        ? (headerTitle as (\n            props: TextProps & { children?: string }\n          ) => React.ReactNode)\n        : (props: TextProps & { children?: string }) => (\n            <HeaderTitle {...props} />\n          );\n\n    return render({\n      onLayout,\n      allowFontScaling: Boolean(allowFontScaling),\n      style: [\n        color ? { color } : null,\n        layoutPreset === 'center'\n          ? { textAlign: 'center' }\n          : { textAlign: 'left' },\n        titleStyle,\n      ],\n      children: titleString,\n    });\n  };\n\n  private renderLeftComponent = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n    if (\n      React.isValidElement(options.headerLeft) ||\n      options.headerLeft === null\n    ) {\n      return options.headerLeft;\n    }\n\n    if (!options.headerLeft && props.scene.index === 0) {\n      return;\n    }\n\n    const backButtonTitle = this.getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this.getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n    const RenderedLeftComponent =\n      (options.headerLeft as React.FunctionComponent<HeaderBackButtonProps>) ||\n      HeaderBackButton;\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        props.scene.descriptor.navigation.goBack(props.scene.descriptor.key);\n      });\n    };\n\n    return (\n      <RenderedLeftComponent\n        onPress={goBack}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        backImage={options.headerBackImage}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        backTitleVisible={this.props.backTitleVisible}\n        allowFontScaling={options.headerBackAllowFontScaling}\n        titleStyle={options.headerBackTitleStyle}\n        layoutPreset={this.props.layoutPreset}\n        width={width}\n        scene={props.scene}\n      />\n    );\n  };\n\n  private renderModularLeftComponent = (\n    props: SubviewProps,\n    ButtonContainerComponent: React.ComponentProps<\n      typeof ModularHeaderBackButton\n    >['ButtonContainerComponent'],\n    LabelContainerComponent: React.ComponentProps<\n      typeof ModularHeaderBackButton\n    >['LabelContainerComponent']\n  ) => {\n    const { options, navigation } = props.scene.descriptor;\n    const backButtonTitle = this.getBackButtonTitleString(props.scene);\n    const truncatedBackButtonTitle = this.getTruncatedBackButtonTitle(\n      props.scene\n    );\n    const width = this.state.widths[props.scene.key]\n      ? (this.props.layout.initWidth - this.state.widths[props.scene.key]) / 2\n      : undefined;\n\n    const goBack = () => {\n      // Go back on next tick because button ripple effect needs to happen on Android\n      requestAnimationFrame(() => {\n        navigation.goBack(props.scene.descriptor.key);\n      });\n    };\n\n    return (\n      <ModularHeaderBackButton\n        onPress={goBack}\n        ButtonContainerComponent={ButtonContainerComponent}\n        LabelContainerComponent={LabelContainerComponent}\n        backTitleVisible={this.props.backTitleVisible}\n        pressColorAndroid={options.headerPressColorAndroid}\n        tintColor={options.headerTintColor}\n        backImage={options.headerBackImage}\n        title={backButtonTitle}\n        truncatedTitle={truncatedBackButtonTitle}\n        titleStyle={options.headerBackTitleStyle}\n        layoutPreset={this.props.layoutPreset}\n        width={width}\n        scene={props.scene}\n      />\n    );\n  };\n\n  private renderRightComponent = (props: SubviewProps) => {\n    const { headerRight } = props.scene.descriptor.options;\n\n    if (typeof headerRight === 'function') {\n      return headerRight();\n    }\n\n    return headerRight || null;\n  };\n\n  private renderLeft = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n\n    const { transitionPreset } = this.props;\n\n    let { style } = props;\n    if (options.headerLeftContainerStyle) {\n      style = [style, options.headerLeftContainerStyle];\n    }\n\n    // On Android, or if we have a custom header left, or if we have a custom back image, we\n    // do not use the modular header (which is the one that imitates UINavigationController)\n    if (\n      transitionPreset !== 'uikit' ||\n      options.headerBackImage ||\n      options.headerLeft ||\n      options.headerLeft === null\n    ) {\n      return this.renderSubView(\n        { ...props, style },\n        'left',\n        this.renderLeftComponent,\n        this.props.leftInterpolator\n      );\n    } else {\n      return this.renderModularSubView(\n        { ...props, style },\n        'left',\n        this.renderModularLeftComponent,\n        this.props.leftLabelInterpolator,\n        this.props.leftButtonInterpolator\n      );\n    }\n  };\n\n  private renderTitle = (\n    props: SubviewProps,\n    options: {\n      hasLeftComponent: boolean;\n      hasRightComponent: boolean;\n      headerTitleContainerStyle: StyleProp<ViewStyle>;\n    }\n  ) => {\n    const { layoutPreset, transitionPreset } = this.props;\n    let style: StyleProp<ViewStyle> = [\n      { justifyContent: layoutPreset === 'center' ? 'center' : 'flex-start' },\n      getTitleOffsets(\n        layoutPreset,\n        options.hasLeftComponent,\n        options.hasRightComponent\n      ),\n      options.headerTitleContainerStyle,\n    ];\n\n    return this.renderSubView(\n      { ...props, style },\n      'title',\n      this.renderTitleComponent,\n      transitionPreset === 'uikit'\n        ? this.props.titleFromLeftInterpolator\n        : this.props.titleInterpolator\n    );\n  };\n\n  private renderRight = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n\n    let { style } = props;\n    if (options.headerRightContainerStyle) {\n      style = [style, options.headerRightContainerStyle];\n    }\n\n    return this.renderSubView(\n      { ...props, style },\n      'right',\n      this.renderRightComponent,\n      this.props.rightInterpolator\n    );\n  };\n\n  private renderBackground = (props: SubviewProps) => {\n    const {\n      index,\n      descriptor: { options },\n    } = props.scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    return this.renderSubView(\n      { ...props, style: StyleSheet.absoluteFill },\n      'background',\n      () =>\n        typeof options.headerBackground === 'function'\n          ? options.headerBackground()\n          : options.headerBackground,\n      this.props.backgroundInterpolator\n    );\n  };\n\n  private renderModularSubView = (\n    props: SubviewProps,\n    name: SubviewName,\n    renderer: (\n      props: SubviewProps,\n      ButtonContainerComponent: React.ComponentProps<\n        typeof ModularHeaderBackButton\n      >['ButtonContainerComponent'],\n      LabelContainerComponent: React.ComponentProps<\n        typeof ModularHeaderBackButton\n      >['LabelContainerComponent']\n    ) => React.ReactNode,\n    labelStyleInterpolator: (props: SceneInterpolatorProps) => any,\n    buttonStyleInterpolator: (props: SceneInterpolatorProps) => any\n  ) => {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    // Never render a modular back button on the first screen in a stack.\n    if (index === 0) {\n      return;\n    }\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const ButtonContainer = ({ children }: { children: React.ReactNode }) => (\n      <Animated.View\n        style={[buttonStyleInterpolator({ ...this.props, ...props })]}\n      >\n        {children}\n      </Animated.View>\n    );\n\n    const LabelContainer = ({ children }: { children: React.ReactNode }) => (\n      <Animated.View\n        style={[labelStyleInterpolator({ ...this.props, ...props })]}\n      >\n        {children}\n      </Animated.View>\n    );\n\n    const subView = renderer(\n      props,\n      ButtonContainer as any,\n      LabelContainer as any\n    );\n\n    if (subView === null) {\n      return subView;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <View\n        key={`${name}_${key}`}\n        pointerEvents={pointerEvents}\n        style={[styles.item, styles[name], props.style]}\n      >\n        {subView}\n      </View>\n    );\n  };\n\n  private renderSubView = (\n    props: SubviewProps,\n    name: SubviewName,\n    renderer: (props: SubviewProps) => React.ReactNode,\n    styleInterpolator?: (props: SceneInterpolatorProps) => any\n  ) => {\n    const { scene } = props;\n    const { index, isStale, key } = scene;\n\n    const offset = this.props.navigation.state.index - index;\n\n    if (Math.abs(offset) > 2) {\n      // Scene is far away from the active scene. Hides it to avoid unnecessary\n      // rendering.\n      return null;\n    }\n\n    const subView = renderer(props);\n\n    if (subView == null) {\n      return null;\n    }\n\n    const pointerEvents = offset !== 0 || isStale ? 'none' : 'box-none';\n\n    return (\n      <Animated.View\n        pointerEvents={pointerEvents}\n        key={`${name}_${key}`}\n        style={[\n          styles.item,\n          styles[name],\n          props.style,\n          styleInterpolator &&\n            styleInterpolator({\n              ...this.props,\n              ...props,\n            }),\n        ]}\n      >\n        {subView}\n      </Animated.View>\n    );\n  };\n\n  private renderHeader = (props: SubviewProps) => {\n    const { options } = props.scene.descriptor;\n    if (options.header === null || options.headerShown === false) {\n      return null;\n    }\n    const left = this.renderLeft(props);\n    const right = this.renderRight(props);\n    const title = this.renderTitle(props, {\n      hasLeftComponent: !!left,\n      hasRightComponent: !!right,\n      headerTitleContainerStyle: options.headerTitleContainerStyle,\n    });\n\n    const { transitionPreset } = this.props;\n\n    const wrapperProps = {\n      style: styles.header,\n      key: `scene_${props.scene.key}`,\n    };\n\n    if (\n      options.headerLeft ||\n      options.headerBackImage ||\n      Platform.OS !== 'ios' ||\n      transitionPreset !== 'uikit'\n    ) {\n      return (\n        <View {...wrapperProps}>\n          {title}\n          {left}\n          {right}\n        </View>\n      );\n    } else {\n      return (\n        <MaskedViewIOS\n          {...wrapperProps}\n          maskElement={\n            <View style={styles.iconMaskContainer}>\n              <Image\n                source={require('../assets/back-icon-mask.png')}\n                style={styles.iconMask}\n              />\n              <View style={styles.iconMaskFillerRect} />\n            </View>\n          }\n        >\n          {title}\n          {left}\n          {right}\n        </MaskedViewIOS>\n      );\n    }\n  };\n\n  render() {\n    let appBar;\n    let background;\n    const { mode, scene, isLandscape } = this.props;\n\n    if (mode === 'float') {\n      const scenesByIndex: { [key: string]: Scene } = {};\n      this.props.scenes.forEach(scene => {\n        scenesByIndex[scene.index] = scene;\n      });\n      const scenesProps = Object.values(scenesByIndex).map(scene => ({\n        position: this.props.position,\n        scene,\n      }));\n      appBar = scenesProps.map(props => this.renderHeader(props));\n      background = scenesProps.map(props => this.renderBackground(props));\n    } else {\n      const headerProps = {\n        position: new Animated.Value(this.props.scene.index),\n        scene: this.props.scene,\n      };\n\n      appBar = this.renderHeader(headerProps);\n      background = this.renderBackground(headerProps);\n    }\n\n    const { options } = scene.descriptor;\n    const { headerStyle = {} } = options;\n    const headerStyleObj = StyleSheet.flatten(headerStyle) as ViewStyle;\n    const appBarHeight = getAppBarHeight(isLandscape);\n\n    const {\n      alignItems,\n      justifyContent,\n      flex,\n      flexDirection,\n      flexGrow,\n      flexShrink,\n      flexBasis,\n      flexWrap,\n      position,\n      padding,\n      paddingHorizontal,\n      paddingRight,\n      paddingLeft,\n      // paddingVertical,\n      // paddingTop,\n      // paddingBottom,\n      top,\n      right,\n      bottom,\n      left,\n      ...safeHeaderStyle\n    } = headerStyleObj;\n\n    if (__DEV__) {\n      warnIfHeaderStyleDefined(alignItems, 'alignItems');\n      warnIfHeaderStyleDefined(justifyContent, 'justifyContent');\n      warnIfHeaderStyleDefined(flex, 'flex');\n      warnIfHeaderStyleDefined(flexDirection, 'flexDirection');\n      warnIfHeaderStyleDefined(flexGrow, 'flexGrow');\n      warnIfHeaderStyleDefined(flexShrink, 'flexShrink');\n      warnIfHeaderStyleDefined(flexBasis, 'flexBasis');\n      warnIfHeaderStyleDefined(flexWrap, 'flexWrap');\n      warnIfHeaderStyleDefined(padding, 'padding');\n      warnIfHeaderStyleDefined(position, 'position');\n      warnIfHeaderStyleDefined(paddingHorizontal, 'paddingHorizontal');\n      warnIfHeaderStyleDefined(paddingRight, 'paddingRight');\n      warnIfHeaderStyleDefined(paddingLeft, 'paddingLeft');\n      // warnIfHeaderStyleDefined(paddingVertical, 'paddingVertical');\n      // warnIfHeaderStyleDefined(paddingTop, 'paddingTop');\n      // warnIfHeaderStyleDefined(paddingBottom, 'paddingBottom');\n      warnIfHeaderStyleDefined(top, 'top');\n      warnIfHeaderStyleDefined(right, 'right');\n      warnIfHeaderStyleDefined(bottom, 'bottom');\n      warnIfHeaderStyleDefined(left, 'left');\n    }\n\n    let isDark = this.context === 'dark';\n\n    // TODO: warn if any unsafe styles are provided\n    const containerStyles = [\n      options.headerTransparent\n        ? isDark\n          ? styles.transparentContainerDark\n          : styles.transparentContainerLight\n        : isDark\n        ? styles.containerDark\n        : styles.containerLight,\n      { height: appBarHeight },\n      safeHeaderStyle,\n    ];\n\n    const { headerForceInset } = options;\n    const forceInset = headerForceInset || {\n      top: 'always',\n      bottom: 'never',\n      horizontal: 'always',\n    };\n\n    let backgroundColor = safeHeaderStyle.backgroundColor;\n\n    if (!backgroundColor) {\n      backgroundColor = isDark\n        ? ThemeColors.dark.header\n        : ThemeColors.light.header;\n    }\n\n    return (\n      <Animated.View\n        style={[\n          this.props.layoutInterpolator(this.props),\n          Platform.OS === 'ios' && !options.headerTransparent\n            ? { backgroundColor }\n            : null,\n        ]}\n      >\n        <SafeAreaView forceInset={forceInset} style={containerStyles}>\n          {background}\n          <View style={styles.flexOne}>{appBar}</View>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nfunction warnIfHeaderStyleDefined(value: any, styleProp: string) {\n  if (styleProp === 'position' && value === 'absolute') {\n    console.warn(\n      \"position: 'absolute' is not supported on headerStyle. If you would like to render content under the header, use the headerTransparent navigationOption.\"\n    );\n  } else if (value !== undefined) {\n    console.warn(\n      `${styleProp} was given a value of ${value}, this has no effect on headerStyle.`\n    );\n  }\n}\n\nconst platformContainerStylesLight = Platform.select({\n  android: {\n    elevation: 4,\n  },\n  web: {\n    // https://github.com/necolas/react-native-web/issues/44\n    // Material Design\n    boxShadow: `0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)`,\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.light.headerBorder,\n  },\n});\n\nconst platformContainerStylesDark = Platform.select({\n  android: {\n    elevation: 4,\n  },\n  web: {\n    // https://github.com/necolas/react-native-web/issues/44\n    // Material Design\n    // TODO: what to use here?\n    boxShadow: `0 2px 4px -1px rgba(0,0,0,0.2), 0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12)`,\n  },\n  default: {\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: ThemeColors.dark.headerBorder,\n  },\n});\n\nconst styles = StyleSheet.create({\n  containerLight: {\n    ...platformContainerStylesLight,\n    backgroundColor: ThemeColors.light.header,\n  },\n  containerDark: {\n    ...platformContainerStylesDark,\n    backgroundColor: ThemeColors.dark.header,\n  },\n  transparentContainerLight: {\n    ...platformContainerStylesLight,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0,\n  },\n  transparentContainerDark: {\n    ...platformContainerStylesDark,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    borderBottomWidth: 0,\n    borderBottomColor: 'transparent',\n    elevation: 0,\n  },\n  header: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: 'row',\n  },\n  item: {\n    backgroundColor: 'transparent',\n  },\n  iconMaskContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n  },\n  iconMaskFillerRect: {\n    flex: 1,\n    backgroundColor: '#d8d8d8',\n    marginLeft: -5,\n  },\n  iconMask: {\n    // These are mostly the same as the icon in ModularHeaderBackButton\n    height: 23,\n    width: 14.5,\n    marginLeft: 8.5,\n    marginTop: -2.5,\n    alignSelf: 'center',\n    resizeMode: 'contain',\n    transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  background: {},\n  // eslint-disable-next-line react-native/no-unused-styles\n  title: {\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  left: {\n    left: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  // eslint-disable-next-line react-native/no-unused-styles\n  right: {\n    right: 0,\n    bottom: 0,\n    top: 0,\n    position: 'absolute',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  flexOne: {\n    flex: 1,\n  },\n});\n\nexport default Object.assign(withOrientation(Header), {\n  get HEIGHT() {\n    return APPBAR_HEIGHT + STATUSBAR_HEIGHT;\n  },\n});\n"]},"metadata":{},"sourceType":"module"}