{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ActivityIndicator.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../core/theming\";\nvar DURATION = 2400;\n\nvar ActivityIndicator = function (_React$Component) {\n  _inherits(ActivityIndicator, _React$Component);\n\n  function ActivityIndicator() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ActivityIndicator);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ActivityIndicator)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      timer: new Animated.Value(0),\n      fade: new Animated.Value(!_this.props.animating && _this.props.hidesWhenStopped ? 0 : 1)\n    };\n    _this.rotation = undefined;\n\n    _this._startRotation = function () {\n      var _this$state = _this.state,\n          fade = _this$state.fade,\n          timer = _this$state.timer;\n      Animated.timing(fade, {\n        duration: 200,\n        toValue: 1,\n        isInteraction: false,\n        useNativeDriver: true\n      }).start();\n\n      if (_this.rotation) {\n        timer.setValue(0);\n        Animated.loop(_this.rotation).start();\n      }\n    };\n\n    _this._stopRotation = function () {\n      if (_this.rotation) {\n        _this.rotation.stop();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ActivityIndicator, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var animating = this.props.animating;\n      var timer = this.state.timer;\n      this.rotation = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n\n      if (animating) {\n        this._startRotation();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          animating = _this$props.animating,\n          hidesWhenStopped = _this$props.hidesWhenStopped;\n      var fade = this.state.fade;\n\n      if (animating !== prevProps.animating) {\n        if (animating) {\n          this._startRotation();\n        } else if (hidesWhenStopped) {\n          Animated.timing(fade, {\n            duration: 200,\n            toValue: 0,\n            useNativeDriver: true,\n            isInteraction: false\n          }).start(this._stopRotation.bind(this));\n        } else {\n          this._stopRotation();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          fade = _this$state2.fade,\n          timer = _this$state2.timer;\n\n      var _this$props2 = this.props,\n          animating = _this$props2.animating,\n          indicatorColor = _this$props2.color,\n          hidesWhenStopped = _this$props2.hidesWhenStopped,\n          indicatorSize = _this$props2.size,\n          style = _this$props2.style,\n          theme = _this$props2.theme,\n          rest = _objectWithoutProperties(_this$props2, [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"]);\n\n      var color = indicatorColor || theme.colors.primary;\n      var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n      var frames = 60 * DURATION / 1000;\n      var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n      var containerStyle = {\n        width: size,\n        height: size / 2,\n        overflow: 'hidden'\n      };\n      return React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        }\n      }), React.createElement(Animated.View, {\n        style: [{\n          width: size,\n          height: size,\n          opacity: fade\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        }\n      }, [0, 1].map(function (index) {\n        var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          return frameIndex / (frames - 1);\n        });\n        var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n          var progress = 2 * frameIndex / (frames - 1);\n          var rotation = index ? +(360 - 15) : -(180 - 15);\n\n          if (progress > 1.0) {\n            progress = 2.0 - progress;\n          }\n\n          var direction = index ? -1 : +1;\n          return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n        });\n        var layerStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            rotate: timer.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n            })\n          }]\n        };\n        var viewportStyle = {\n          width: size,\n          height: size,\n          transform: [{\n            translateY: index ? -size / 2 : 0\n          }, {\n            rotate: timer.interpolate({\n              inputRange: inputRange,\n              outputRange: outputRange\n            })\n          }]\n        };\n        var offsetStyle = index ? {\n          top: size / 2\n        } : null;\n        var lineStyle = {\n          width: size,\n          height: size,\n          borderColor: color,\n          borderWidth: size / 10,\n          borderRadius: size / 2\n        };\n        return React.createElement(Animated.View, {\n          key: index,\n          style: [styles.layer],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          }\n        }, React.createElement(Animated.View, {\n          style: layerStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          }\n        }, React.createElement(Animated.View, {\n          style: [containerStyle, offsetStyle],\n          collapsable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          }\n        }, React.createElement(Animated.View, {\n          style: viewportStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          }\n        }, React.createElement(Animated.View, {\n          style: containerStyle,\n          collapsable: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          }\n        }, React.createElement(Animated.View, {\n          style: lineStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          }\n        }))))));\n      })));\n    }\n  }]);\n\n  return ActivityIndicator;\n}(React.Component);\n\nActivityIndicator.defaultProps = {\n  animating: true,\n  size: 'small',\n  hidesWhenStopped: true\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withTheme(ActivityIndicator);","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","React","Component","defaultProps","animating","size","hidesWhenStopped","state","timer","Animated","fade","rotation","undefined","duration","easing","Easing","useNativeDriver","Platform","toValue","isInteraction","prevProps","_startRotation","_stopRotation","indicatorColor","indicatorSize","style","theme","rest","color","frames","containerStyle","width","height","overflow","styles","opacity","inputRange","Array","frameIndex","outputRange","progress","index","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","StyleSheet","container","justifyContent","alignItems","layer","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  timer: Animated.Value;\n  fade: Animated.Value;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ActivityIndicator extends React.Component<Props, State> {\n  static defaultProps: Partial<Props> = {\n    animating: true,\n    size: 'small',\n    hidesWhenStopped: true,\n  };\n\n  state = {\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(\n      !this.props.animating && this.props.hidesWhenStopped ? 0 : 1\n    ),\n  };\n\n  rotation: Animated.CompositeAnimation | undefined = undefined;\n\n  componentDidMount() {\n    const { animating } = this.props;\n    const { timer } = this.state;\n\n    // Circular animation in loop\n    this.rotation = Animated.timing(timer, {\n      duration: DURATION,\n      easing: Easing.linear,\n      // Animated.loop does not work if useNativeDriver is true on web\n      useNativeDriver: Platform.OS !== 'web',\n      toValue: 1,\n      isInteraction: false,\n    });\n\n    if (animating) {\n      this._startRotation();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { animating, hidesWhenStopped } = this.props;\n    const { fade } = this.state;\n\n    if (animating !== prevProps.animating) {\n      if (animating) {\n        this._startRotation();\n      } else if (hidesWhenStopped) {\n        // Hide indicator first and then stop rotation\n        Animated.timing(fade, {\n          duration: 200,\n          toValue: 0,\n          useNativeDriver: true,\n          isInteraction: false,\n        }).start(this._stopRotation.bind(this));\n      } else {\n        this._stopRotation();\n      }\n    }\n  }\n\n  _startRotation = () => {\n    const { fade, timer } = this.state;\n\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (this.rotation) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(this.rotation).start();\n    }\n  };\n\n  _stopRotation = () => {\n    if (this.rotation) {\n      this.rotation.stop();\n    }\n  };\n\n  render() {\n    const { fade, timer } = this.state;\n    const {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      animating,\n      color: indicatorColor,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      hidesWhenStopped,\n      size: indicatorSize,\n      style,\n      theme,\n      ...rest\n    } = this.props;\n    const color = indicatorColor || theme.colors.primary;\n    const size =\n      typeof indicatorSize === 'string'\n        ? indicatorSize === 'small'\n          ? 24\n          : 48\n        : indicatorSize\n        ? indicatorSize\n        : 24;\n\n    const frames = (60 * DURATION) / 1000;\n    const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n    const containerStyle = {\n      width: size,\n      height: size / 2,\n      overflow: 'hidden',\n    };\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        <Animated.View style={[{ width: size, height: size, opacity: fade }]}>\n          {[0, 1].map(index => {\n            // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n            const inputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => frameIndex / (frames - 1)\n            );\n            const outputRange = Array.from(\n              new Array(frames),\n              (_, frameIndex) => {\n                let progress = (2 * frameIndex) / (frames - 1);\n                const rotation = index ? +(360 - 15) : -(180 - 15);\n\n                if (progress > 1.0) {\n                  progress = 2.0 - progress;\n                }\n\n                const direction = index ? -1 : +1;\n\n                return `${direction * (180 - 30) * easing(progress) +\n                  rotation}deg`;\n              }\n            );\n\n            const layerStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  rotate: timer.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [\n                      `${0 + 30 + 15}deg`,\n                      `${2 * 360 + 30 + 15}deg`,\n                    ],\n                  }),\n                },\n              ],\n            };\n\n            const viewportStyle = {\n              width: size,\n              height: size,\n              transform: [\n                {\n                  translateY: index ? -size / 2 : 0,\n                },\n                {\n                  rotate: timer.interpolate({ inputRange, outputRange }),\n                },\n              ],\n            };\n\n            const offsetStyle = index ? { top: size / 2 } : null;\n\n            const lineStyle = {\n              width: size,\n              height: size,\n              borderColor: color,\n              borderWidth: size / 10,\n              borderRadius: size / 2,\n            };\n\n            return (\n              <Animated.View key={index} style={[styles.layer]}>\n                <Animated.View style={layerStyle}>\n                  <Animated.View\n                    style={[containerStyle, offsetStyle]}\n                    collapsable={false}\n                  >\n                    <Animated.View style={viewportStyle}>\n                      <Animated.View style={containerStyle} collapsable={false}>\n                        <Animated.View style={lineStyle} />\n                      </Animated.View>\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}