{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/satya/Workspace/Callstack/react-navigation-stack/src/views/Header/HeaderBackButton.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableItem from \"../TouchableItem\";\nimport defaultBackImage from \"../assets/back-icon.png\";\nimport BackButtonWeb from \"./BackButtonWeb\";\n\nvar HeaderBackButton = function (_React$PureComponent) {\n  _inherits(HeaderBackButton, _React$PureComponent);\n\n  function HeaderBackButton() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HeaderBackButton);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HeaderBackButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleTextLayout = function (e) {\n      if (_this.state.initialTextWidth) {\n        return;\n      }\n\n      _this.setState({\n        initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width\n      });\n    };\n\n    _this.getTitleText = function () {\n      var _this$props = _this.props,\n          width = _this$props.width,\n          title = _this$props.title,\n          truncatedTitle = _this$props.truncatedTitle;\n      var initialTextWidth = _this.state.initialTextWidth;\n\n      if (title === null) {\n        return null;\n      } else if (!title) {\n        return truncatedTitle;\n      } else if (initialTextWidth && width && initialTextWidth > width) {\n        return truncatedTitle;\n      } else {\n        return title;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(HeaderBackButton, [{\n    key: \"renderBackImage\",\n    value: function renderBackImage() {\n      var _this$props2 = this.props,\n          backImage = _this$props2.backImage,\n          backTitleVisible = _this$props2.backTitleVisible,\n          tintColor = _this$props2.tintColor;\n      var title = this.getTitleText();\n\n      if (React.isValidElement(backImage)) {\n        return backImage;\n      } else if (backImage) {\n        return backImage({\n          tintColor: tintColor,\n          title: title\n        });\n      } else {\n        return React.createElement(Image, {\n          style: [styles.icon, !!backTitleVisible && styles.iconWithTitle, !!tintColor && {\n            tintColor: tintColor\n          }],\n          source: defaultBackImage,\n          fadeDuration: 0,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          }\n        });\n      }\n    }\n  }, {\n    key: \"maybeRenderTitle\",\n    value: function maybeRenderTitle() {\n      var _this$props3 = this.props,\n          allowFontScaling = _this$props3.allowFontScaling,\n          backTitleVisible = _this$props3.backTitleVisible,\n          titleStyle = _this$props3.titleStyle,\n          tintColor = _this$props3.tintColor;\n      var backTitleText = this.getTitleText();\n\n      if (!backTitleVisible || backTitleText === null) {\n        return null;\n      }\n\n      return React.createElement(Text, {\n        accessible: false,\n        onLayout: this.handleTextLayout,\n        style: [styles.title, !!tintColor && {\n          color: tintColor\n        }, titleStyle],\n        numberOfLines: 1,\n        allowFontScaling: !!allowFontScaling,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        }\n      }, this.getTitleText());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          onPress = _this$props4.onPress,\n          pressColorAndroid = _this$props4.pressColorAndroid,\n          title = _this$props4.title,\n          disabled = _this$props4.disabled;\n      var button = React.createElement(TouchableItem, {\n        disabled: disabled,\n        accessible: true,\n        accessibilityRole: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityLabel: title ? title + \", back\" : 'Go back',\n        accessibilityTraits: \"button\",\n        testID: \"header-back\",\n        delayPressIn: 0,\n        onPress: disabled ? undefined : onPress,\n        pressColor: pressColorAndroid,\n        style: [styles.container, disabled && styles.disabled],\n        borderless: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        }\n      }, this.renderBackImage(), this.maybeRenderTitle()));\n\n      if (Platform.OS === 'ios') {\n        return button;\n      } else {\n        return React.createElement(View, {\n          style: styles.androidButtonWrapper,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          }\n        }, button);\n      }\n    }\n  }]);\n\n  return HeaderBackButton;\n}(React.PureComponent);\n\nHeaderBackButton.defaultProps = {\n  pressColorAndroid: 'rgba(0, 0, 0, .32)',\n  tintColor: Platform.select({\n    ios: '#037aff',\n    web: '#5f6368'\n  }),\n  truncatedTitle: 'Back',\n  backImage: Platform.select({\n    web: BackButtonWeb\n  })\n};\nvar styles = StyleSheet.create({\n  disabled: {\n    opacity: 0.5\n  },\n  androidButtonWrapper: _objectSpread({\n    margin: 13,\n    backgroundColor: 'transparent'\n  }, Platform.select({\n    web: {\n      marginLeft: 21\n    },\n    default: {}\n  })),\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent'\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10\n  },\n  icon: Platform.select({\n    ios: {\n      backgroundColor: 'transparent',\n      height: 21,\n      width: 13,\n      marginLeft: 9,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      backgroundColor: 'transparent',\n      transform: [{\n        scaleX: I18nManager.isRTL ? -1 : 1\n      }]\n    }\n  }),\n  iconWithTitle: Platform.OS === 'ios' ? {\n    marginRight: 6\n  } : {}\n});\nexport default HeaderBackButton;","map":{"version":3,"sources":["HeaderBackButton.tsx"],"names":["HeaderBackButton","React","PureComponent","defaultProps","pressColorAndroid","tintColor","Platform","ios","web","truncatedTitle","backImage","state","handleTextLayout","initialTextWidth","e","backTitleVisible","title","styles","getTitleText","width","allowFontScaling","titleStyle","backTitleText","color","onPress","disabled","button","StyleSheet","opacity","androidButtonWrapper","margin","backgroundColor","marginLeft","default","container","alignItems","flexDirection","fontSize","paddingRight","icon","height","marginRight","marginVertical","resizeMode","transform","scaleX","I18nManager","iconWithTitle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Image,\n  Text,\n  View,\n  Platform,\n  StyleSheet,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport TouchableItem from '../TouchableItem';\n\nimport defaultBackImage from '../assets/back-icon.png';\nimport BackButtonWeb from './BackButtonWeb';\nimport { HeaderBackButtonProps } from '../../types';\n\ntype Props = Omit<HeaderBackButtonProps, 'layoutPreset' | 'scene'>;\n\ntype State = {\n  initialTextWidth?: number;\n};\n\nclass HeaderBackButton extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    pressColorAndroid: 'rgba(0, 0, 0, .32)',\n    tintColor: Platform.select({\n      ios: '#037aff',\n      web: '#5f6368',\n    }),\n    truncatedTitle: 'Back',\n    backImage: Platform.select({\n      web: BackButtonWeb,\n    }),\n  };\n\n  state: State = {};\n\n  private handleTextLayout = (e: LayoutChangeEvent) => {\n    if (this.state.initialTextWidth) {\n      return;\n    }\n    this.setState({\n      initialTextWidth: e.nativeEvent.layout.x + e.nativeEvent.layout.width,\n    });\n  };\n\n  private renderBackImage() {\n    const { backImage, backTitleVisible, tintColor } = this.props;\n\n    let title = this.getTitleText();\n\n    if (React.isValidElement(backImage)) {\n      return backImage;\n    } else if (backImage) {\n      return backImage({\n        tintColor,\n        title,\n      });\n    } else {\n      return (\n        <Image\n          style={[\n            styles.icon,\n            !!backTitleVisible && styles.iconWithTitle,\n            !!tintColor && { tintColor },\n          ]}\n          source={defaultBackImage}\n          fadeDuration={0}\n        />\n      );\n    }\n  }\n\n  private getTitleText = () => {\n    const { width, title, truncatedTitle } = this.props;\n\n    let { initialTextWidth } = this.state;\n\n    if (title === null) {\n      return null;\n    } else if (!title) {\n      return truncatedTitle;\n    } else if (initialTextWidth && width && initialTextWidth > width) {\n      return truncatedTitle;\n    } else {\n      return title;\n    }\n  };\n\n  private maybeRenderTitle() {\n    const {\n      allowFontScaling,\n      backTitleVisible,\n      titleStyle,\n      tintColor,\n    } = this.props;\n    let backTitleText = this.getTitleText();\n\n    if (!backTitleVisible || backTitleText === null) {\n      return null;\n    }\n\n    return (\n      <Text\n        accessible={false}\n        onLayout={this.handleTextLayout}\n        style={[styles.title, !!tintColor && { color: tintColor }, titleStyle]}\n        numberOfLines={1}\n        allowFontScaling={!!allowFontScaling}\n      >\n        {this.getTitleText()}\n      </Text>\n    );\n  }\n\n  render() {\n    const { onPress, pressColorAndroid, title, disabled } = this.props;\n\n    let button = (\n      <TouchableItem\n        disabled={disabled}\n        accessible\n        accessibilityRole=\"button\"\n        accessibilityComponentType=\"button\"\n        accessibilityLabel={title ? `${title}, back` : 'Go back'}\n        accessibilityTraits=\"button\"\n        testID=\"header-back\"\n        delayPressIn={0}\n        onPress={disabled ? undefined : onPress}\n        pressColor={pressColorAndroid}\n        style={[styles.container, disabled && styles.disabled]}\n        borderless\n      >\n        <View style={styles.container}>\n          {this.renderBackImage()}\n          {this.maybeRenderTitle()}\n        </View>\n      </TouchableItem>\n    );\n\n    if (Platform.OS === 'ios') {\n      return button;\n    } else {\n      return <View style={styles.androidButtonWrapper}>{button}</View>;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  disabled: {\n    opacity: 0.5,\n  },\n  androidButtonWrapper: {\n    margin: 13,\n    backgroundColor: 'transparent',\n    ...Platform.select({\n      web: {\n        marginLeft: 21,\n      },\n      default: {},\n    }),\n  },\n  container: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'transparent',\n  },\n  title: {\n    fontSize: 17,\n    paddingRight: 10,\n  },\n  icon: Platform.select({\n    ios: {\n      backgroundColor: 'transparent',\n      height: 21,\n      width: 13,\n      marginLeft: 9,\n      marginRight: 22,\n      marginVertical: 12,\n      resizeMode: 'contain',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n    default: {\n      height: 24,\n      width: 24,\n      margin: 3,\n      resizeMode: 'contain',\n      backgroundColor: 'transparent',\n      transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],\n    },\n  }),\n  iconWithTitle:\n    Platform.OS === 'ios'\n      ? {\n          marginRight: 6,\n        }\n      : {},\n});\n\nexport default HeaderBackButton;\n"]},"metadata":{},"sourceType":"module"}