{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableTitle.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Icon from \"../Icon\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar DataTableTitle = function (_React$Component) {\n  _inherits(DataTableTitle, _React$Component);\n\n  function DataTableTitle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DataTableTitle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DataTableTitle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spinAnim: new Animated.Value(_this.props.sortDirection === 'ascending' ? 0 : 1)\n    };\n    return _this;\n  }\n\n  _createClass(DataTableTitle, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.sortDirection === this.props.sortDirection) {\n        return;\n      }\n\n      Animated.timing(this.state.spinAnim, {\n        toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n        duration: 150,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          numeric = _this$props.numeric,\n          children = _this$props.children,\n          onPress = _this$props.onPress,\n          sortDirection = _this$props.sortDirection,\n          theme = _this$props.theme,\n          style = _this$props.style,\n          numberOfLines = _this$props.numberOfLines,\n          rest = _objectWithoutProperties(_this$props, [\"numeric\", \"children\", \"onPress\", \"sortDirection\", \"theme\", \"style\", \"numberOfLines\"]);\n\n      var textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n      var spin = this.state.spinAnim.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '180deg']\n      });\n      var icon = sortDirection ? React.createElement(Animated.View, {\n        style: [styles.icon, {\n          transform: [{\n            rotate: spin\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, React.createElement(Icon, {\n        source: \"arrow-down\",\n        size: 16,\n        color: theme.colors.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      })) : null;\n      return React.createElement(TouchableWithoutFeedback, _extends({\n        disabled: !onPress,\n        onPress: onPress\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        }\n      }), React.createElement(View, {\n        style: [styles.container, numeric && styles.right, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        }\n      }, icon, React.createElement(Text, {\n        style: [styles.cell, sortDirection ? styles.sorted : {\n          color: textColor\n        }],\n        numberOfLines: numberOfLines,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        }\n      }, children)));\n    }\n  }]);\n\n  return DataTableTitle;\n}(React.Component);\n\nDataTableTitle.displayName = 'DataTable.Title';\nDataTableTitle.defaultProps = {\n  numberOfLines: 1\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12\n  },\n  right: {\n    justifyContent: 'flex-end'\n  },\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center'\n  },\n  sorted: {\n    marginLeft: 8\n  },\n  icon: {\n    height: 24,\n    justifyContent: 'center'\n  }\n});\nexport default withTheme(DataTableTitle);\nexport { DataTableTitle };","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","React","Component","displayName","defaultProps","numberOfLines","state","spinAnim","Animated","prevProps","toValue","duration","useNativeDriver","numeric","children","onPress","sortDirection","theme","style","rest","textColor","color","spin","inputRange","outputRange","icon","styles","transform","rotate","StyleSheet","container","flex","flexDirection","alignContent","paddingVertical","right","justifyContent","cell","height","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  spinAnim: Animated.Value;\n};\n\nclass DataTableTitle extends React.Component<Props, State> {\n  static displayName = 'DataTable.Title';\n\n  static defaultProps = {\n    numberOfLines: 1,\n  };\n\n  state = {\n    spinAnim: new Animated.Value(\n      this.props.sortDirection === 'ascending' ? 0 : 1\n    ),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.sortDirection === this.props.sortDirection) {\n      return;\n    }\n\n    Animated.timing(this.state.spinAnim, {\n      toValue: this.props.sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  render() {\n    const {\n      numeric,\n      children,\n      onPress,\n      sortDirection,\n      theme,\n      style,\n      numberOfLines,\n      ...rest\n    } = this.props;\n\n    const textColor = color(theme.colors.text)\n      .alpha(0.6)\n      .rgb()\n      .string();\n\n    const spin = this.state.spinAnim.interpolate({\n      inputRange: [0, 1],\n      outputRange: ['0deg', '180deg'],\n    });\n\n    const icon = sortDirection ? (\n      <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n        <Icon source=\"arrow-down\" size={16} color={theme.colors.text} />\n      </Animated.View>\n    ) : null;\n\n    return (\n      <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n        <View style={[styles.container, numeric && styles.right, style]}>\n          {icon}\n\n          <Text\n            style={[\n              styles.cell,\n              sortDirection ? styles.sorted : { color: textColor },\n            ]}\n            numberOfLines={numberOfLines}\n          >\n            {children}\n          </Text>\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}